#include <Wire.h>
#include <Servo.h>
#include <ESP8266WiFi.h>
#include <ESP8266WebServer.h>
#include <Adafruit_PWMServoDriver.h>
#include <EEPROM.h>
#include <ESP8266mDNS.h>
#include <Ticker.h>



/*
 * RoboHero Firmware v2.28 (2017/03/03) By TTRobotix
 * mod for VR hack 2017 ghost
 * 
 */

#include "Config.h"

// Version
String FW_Version = "RoboHero Firmware v2.291 (2017/03/03) By TTRobotix"; // hard to use with indentify ver

// I2C Address 0x40
Adafruit_PWMServoDriver pwm = Adafruit_PWMServoDriver();

// LED pin
const int LedPin =  13;

// Servos Matrix
const int ALLMATRIX = 18;          // 0 ~ 15 Servo + 16(GPIO12) + Delay Time + ( PWM Frequency Calibration + Voltage Calibration )
const int ALLSERVOS = 17;        // 0 ~ 15 Servo + 16(GPIO12)

// ES08MDII Pulse Traveling 270度
const int PWM_Frequency = 54;     // PWM frequency 50Hz
const int PWMRES_Min = 1;           // PWM Resolution 1
const int PWMRES_Max = 270;      // PWM Resolution 270
const int SERVOMIN = 104;            // 104
const int SERVOMAX = 512;           // 512

// Servo Delay Base Time
const int BASEDELAYTIME = 10;    // 10ms

// AP Password
const char WiFiAPPSK[] = AP_PASSOWRD;

// Voltage Detected
const int Input_Voltage = 785;          // 約 6.00V
const int Input_MinVoltage = 590;    // 約 5.90V 啟動低壓機制
int Voltage_Conter;
int Voltage_Cab = 0;
int Input_Voltage_Low = 0;
int Voltage = Input_Voltage;
int Set_Voltage = Input_Voltage;

// Servo PWM Frequency
int Set_PWM_Freq = PWM_Frequency;

int Servo_PROGRAM;
int Servo_PROGRAM_Stack;
int GPIO_ID;
int GPIO12_PWM;

// Backup Servo Value
int Running_Servo_POS [ALLMATRIX];

// Engineering model
int Engineering_Model;

ESP8266WebServer server(80);

Servo GPIO12SERVO;

#define FRAME_BUFFER_MAX 50
volatile int head = 0 ;
volatile int tail = 0 ;
volatile int FrameBuffer [FRAME_BUFFER_MAX + 1 ][ALLMATRIX];
int FramePop [FRAME_BUFFER_MAX + 1 ][ALLMATRIX] ;

bool isSetWifi = false ;

Ticker servoTicker;

int ghost_program ; // 0 is off , 1~xx is command
int left = 0 ; // number of times ;
int right = 0 ; // number of times ;
int upDegree = 180 ;
int downDegree = 90 ;
int fanMS = 0 ;
int tailMS = 0 ;
int tailDir = 0 ;

#define LEFT_PIN 0 
#define RIGHT_PIN 15
#define TAIL_PIN 10
// this is GPIO
#define FAN_PIN 13 

/*============================================================================*/
// ES08MDII - 達文西姿勢
/////////////////////////////////////////////////////    0    ,    1    ,    2    ,    3    ,    4    ,    5    ,    6    ,    7    ,    8    ,    9    ,    10   ,    11   ,    12   ,    13   ,    14   ,    15   ,   G12   ,   ms
int Servo_Act_0 [ ] PROGMEM = {  135,    135,    135,    135,    135,    135,    135,    135,    135,    135,     135,     135,     135,     135,     135,     135,      90,        0      };


/*============================================================================*/
// ES08MDII - 立正
/////////////////////////////////////////////////////    0    ,    1    ,    2    ,    3    ,    4    ,    5    ,    6    ,    7    ,    8    ,    9    ,    10   ,    11   ,    12   ,    13   ,    14   ,    15   ,   G12   ,   ms
int Servo_Act_1 [ ] PROGMEM = {  135,    135,    135,    135,    135,    135,    200,    135,    135,     60,      135,     135,     135,     135,     135,     135,      90,        0      };


/*============================================================================*/
// 鞠躬動作
int Servo_Prg_1_Step = 4;
int Servo_Prg_1 [][ALLMATRIX] PROGMEM = {
  //    0    ,    1    ,    2    ,    3    ,    4    ,    5    ,    6    ,    7    ,    8    ,    9    ,    10   ,    11   ,    12   ,    13   ,    14   ,    15   ,   G12    ,    ms
  {  135,    135,    135,    135,    135,    160,    200,    110,    200,      50,      210,     135,     135,     135,     135,     135,      90,        300    },      // 右手前平舉內彎 左手後擺
  {  135,    120,    135,    100,    135,    160,    200,    110,    200,      50,      210,     135,     165,     135,     150,     135,      90,        500    },      // 右手前平舉內彎 左手後擺 鞠躬
  {  135,    120,    135,    100,    135,    160,    200,    110,    200,      50,      210,     135,     165,     135,     150,     135,      90,        1000  },      // 鞠躬動作 等待

  {  135,    135,    135,    135,    135,    135,    200,    135,    135,      60,      135,     135,     135,     135,     135,     135,      90,        500    }       // 立正
};


/*============================================================================*/
// 揮手動作
int Servo_Prg_2_Step = 9;
int Servo_Prg_2 [][ALLMATRIX] PROGMEM = {
  //    0    ,    1    ,    2    ,    3    ,    4    ,    5    ,    6    ,    7    ,    8    ,    9    ,    10   ,    11   ,    12   ,    13   ,    14   ,    15   ,   G12    ,    ms
  {  125,     135,    135,    135,    125,    135,    200,    135,     135,    60,      250,     125,     135,     135,     135,     125,      60,         500  },      // 身體右傾斜 右手上抬向內 頭右轉
  {  125,     135,    135,    135,    125,    135,    200,    135,     135,    90,      250,     125,     135,     135,     135,     125,      60,         300  },      // 身體右傾斜 右手上抬向外 頭右轉
  {  125,     135,    135,    135,    125,    135,    200,    135,     135,    60,      250,     125,     135,     135,     135,     125,      60,         300  },      // 身體右傾斜 右手上抬向內 頭右轉
  {  125,     135,    135,    135,    125,    135,    200,    135,     135,    90,      250,     125,     135,     135,     135,     125,      60,         300  },      // 身體右傾斜 右手上抬向外 頭右轉

  {  145,     135,    135,    135,    145,     20,     200,    135,     135,    60,      135,     145,     135,     135,     135,     145,     120,        500  },      // 身體左傾斜 左手上抬向內 頭左轉
  {  145,     135,    135,    135,    145,     20,     170,    135,     135,    60,      135,     145,     135,     135,     135,     145,     120,        300  },      // 身體左傾斜 左手上抬向外 頭左轉
  {  145,     135,    135,    135,    145,     20,     200,    135,     135,    60,      135,     145,     135,     135,     135,     145,     120,        300  },      // 身體左傾斜 左手上抬向內 頭左轉
  {  145,     135,    135,    135,    145,     20,     170,    135,     135,    60,      135,     145,     135,     135,     135,     145,     120,        300  },      // 身體左傾斜 左手上抬向外 頭左轉

  {  135,     135,    135,    135,    135,    135,    200,    135,     135,    60,      135,     135,     135,     135,     135,     135,      90,         500  }       // 立正
};

/*============================================================================*/
// 鋼鐵人動作
int Servo_Prg_3_Step = 9;
int Servo_Prg_3 [][ALLMATRIX] PROGMEM = {
  //    0    ,    1    ,    2    ,    3    ,    4    ,    5    ,    6    ,    7    ,    8    ,    9    ,    10   ,    11   ,    12   ,    13   ,    14   ,    15   ,   G12    ,    ms
  {  145,     135,    135,    135,    145,    135,    200,    180,     40,     145,     135,     145,     135,     135,     135,     145,      60,         300  },      // 身體左傾斜 右手上抬 掌上 頭右轉
  {  145,     135,    135,    135,    145,    135,    200,    180,     40,     145,     135,     145,     135,     135,     135,     145,      60,         800  },      // 等待

  {  125,     135,    135,    135,    125,    135,    125,    220,     80,      60,      135,     125,     135,     135,     135,     125,     120,        300  },      // 身體右傾斜 左手上抬 掌上 頭左轉
  {  125,     135,    135,    135,    125,    135,    125,    220,     80,      60,      135,     125,     135,     135,     135,     125,     120,        800  },      // 等待

  {  135,     135,    135,    135,    135,     45,     170,    135,    135,     90,      225,     135,     135,     135,     135,     135,      90,         300  },      // 立正 雙手上抬 掌向內
  {  135,     135,    135,    135,    135,     45,     170,    135,    135,     90,      225,     135,     135,     135,     135,     135,      90,         500  },      // 等待

  {  135,     117,    135,    110,    135,     45,     210,    220,     40,      45,      225,     135,     160,     135,     153,     135,      90,         500  },      // 身體後傾斜 雙手上抬 掌向外
  {  135,     117,    135,    110,    135,     45,     210,    220,     40,      45,      225,     135,     160,     135,     153,     135,      90,         800  },      // 等待

  {  135,     135,    135,    135,    135,    135,    200,    135,    135,     60,      135,     135,     135,     135,     135,     135,      90,         500  }       // 立正
};



/*============================================================================*/
// 阿帕契動作
int Servo_Prg_4_Step = 7;
int Servo_Prg_4 [][ALLMATRIX] PROGMEM = {
  //    0    ,    1    ,    2    ,    3    ,    4    ,    5    ,    6    ,    7    ,    8    ,    9    ,    10   ,    11   ,    12   ,    13   ,    14   ,    15   ,   G12    ,    ms
  {  125,     135,    135,    135,    125,    135,    170,     60,     135,    145,     135,     125,     135,     135,     135,     125,      90,         500  },      // 身體右傾斜 右手平舉 左手插腰
  {  125,     135,    135,    135,    125,    135,    170,     60,     135,    145,     135,     125,     135,     135,     135,     120,      90,         300  },      // 身體右傾斜 右手平舉 左手插腰 左腳預抬
  {  125,     135,    135,    135,    125,    135,    170,     60,     135,    145,     135,     150,     135,     135,     135,     115,      90,         600  },      // 身體右傾斜 右手平舉 左手插腰 左腳上抬
  {  125,     135,    135,    135,    125,    135,    170,     60,     210,     50,      270,     150,     135,     135,     135,     115,     120,        400  },      // 身體右傾斜 右手敬禮 左手插腰 左腳上抬 頭左轉
  {  125,     135,    135,    135,    125,    135,    170,     60,     210,     50,      270,     150,     135,     135,     135,     115,     120,        1000},      // 等待

  {  125,     135,    135,    135,    125,    135,    170,     60,     135,     55,      135,     125,     135,     135,     135,     120,      90,         500  },      // 身體右傾斜 右手平舉 左手插腰 左腳預抬
  {  135,     135,    135,    135,    135,    135,    200,    135,    135,     60,      135,     135,     135,     135,     135,     135,      90,         500  }       // 立正
};



/*============================================================================*/
// 單腳平衡動作
int Servo_Prg_5_Step = 12;
int Servo_Prg_5 [][ALLMATRIX] PROGMEM = {
  //    0    ,    1    ,    2    ,    3    ,    4    ,    5    ,    6    ,    7    ,    8    ,    9    ,    10   ,    11   ,    12   ,    13   ,    14   ,    15   ,   G12    ,    ms
  {  145,     135,    135,    135,    145,    100,    125,    135,    135,    145,     170,     145,     135,     135,     135,     145,      90,         500  },      // 身體左傾斜 雙手平舉上抬旋轉
  {  150,     135,    135,    135,    145,    100,    125,    135,    135,    145,     170,     145,     135,     135,     135,     145,      90,         300  },      // 身體左傾斜 雙手平舉上抬旋轉 右腳預抬
  {  150,     135,    135,    135,    125,    100,    125,    135,    135,    145,     170,     145,     135,     135,     135,     145,      90,         500  },      // 身體左傾斜 雙手平舉上抬旋轉 右腳上抬
  {  150,     135,    135,    135,    125,    100,    125,    135,    135,    145,     170,     145,     135,     135,     135,     145,      90,         600  },      // 等待

  {  150,     110,    135,     60,     125,    100,    125,    135,    135,    145,     170,     145,     135,     135,     135,     145,      90,         900  },      // 身體左傾斜 雙手平舉上抬旋轉 左腳獨立
  {  150,     110,    135,     60,     125,    100,    100,    135,    135,    170,     170,     145,     135,     135,     135,     145,      60,         500  },      // 身體左傾斜 雙手平舉上抬旋轉 左腳獨立 手上 頭右轉
  {  150,     110,    135,     60,     125,    100,    150,    135,    135,    120,     170,     145,     135,     135,     135,     145,     120,        500  },      // 身體左傾斜 雙手平舉上抬旋轉 左腳獨立 手下 頭左轉
  {  150,     110,    135,     60,     125,    100,    100,    135,    135,    170,     170,     145,     135,     135,     135,     145,      60,         500  },      // 身體左傾斜 雙手平舉上抬旋轉 左腳獨立 手上 頭右轉
  {  150,     110,    135,     60,     125,    100,    150,    135,    135,    120,     170,     145,     135,     135,     135,     145,     120,        500  },      // 身體左傾斜 雙手平舉上抬旋轉 左腳獨立 手下 頭左轉
  {  150,     110,    135,     60,     125,    100,    125,    135,    135,    145,     170,     145,     135,     135,     135,     145,      90,         500  },      // 身體左傾斜 雙手平舉上抬旋轉 左腳獨立
  {  150,     135,    135,    135,    125,    100,    125,    135,    135,    145,     170,     145,     135,     135,     135,     145,      90,         800  },      // 身體左傾斜 雙手平舉上抬旋轉 右腳上抬

  {  135,     135,    135,    135,    135,    135,    200,    135,    135,     60,      135,     135,     135,     135,     135,     135,      90,         500  }       // 立正
};

/*============================================================================*/
// 暖身動作
int Servo_Prg_6_Step = 24;
int Servo_Prg_6 [][ALLMATRIX] PROGMEM = {
  //    0    ,    1    ,    2    ,    3    ,    4    ,    5    ,    6    ,    7    ,    8    ,    9    ,    10   ,    11   ,    12   ,    13   ,    14   ,    15   ,   G12    ,    ms
  {  135,     135,    135,    135,    135,    135,    170,     60,     200,     90,      135,     135,     135,     135,     135,     135,      90,         300  },       // 雙手插腰
  {  135,     135,    135,    135,    135,    135,    170,     60,     200,     90,      135,     135,     135,     135,     135,     135,      60,         400  },       // 雙手插腰 頭右轉
  {  135,     135,    135,    135,    135,    135,    170,     60,     200,     90,      135,     135,     135,     135,     135,     135,      60,         400  },       // 雙手插腰 頭右轉
  {  135,     135,    135,    135,    135,    135,    170,     60,     200,     90,      135,     135,     135,     135,     135,     135,     120,        400  },       // 雙手插腰 頭左轉
  {  135,     135,    135,    135,    135,    135,    170,     60,     200,     90,      135,     135,     135,     135,     135,     135,     120,        400  },       // 雙手插腰 頭左轉

  {  135,     135,    135,    135,    135,    135,    170,     60,     200,     90,      135,     135,     135,     135,     135,     135,      90,         400  },       // 雙手插腰
  {  125,     135,    135,    135,    125,    135,    170,     60,     200,     90,      135,     125,     135,     135,     135,     125,      90,         400  },       // 雙手插腰 身體右傾斜
  {  145,     135,    135,    135,    145,    135,    170,     60,     200,     90,      135,     145,     135,     135,     135,     145,      90,         400  },       // 雙手插腰 身體左傾斜
  {  125,     135,    135,    135,    125,    135,    170,     60,     200,     90,      135,     125,     135,     135,     135,     125,      90,         400  },       // 雙手插腰 身體右傾斜
  {  145,     135,    135,    135,    145,    135,    170,     60,     200,     90,      135,     145,     135,     135,     135,     145,      90,         400  },       // 雙手插腰 身體左傾斜

  {  135,     135,    135,    135,    135,    135,    170,     60,     200,     90,      135,     135,     135,     135,     135,     135,      90,         300  },       // 雙手插腰
  {  135,     175,     40,      80,     135,    180,    170,     60,     200,     90,      190,     135,     185,     220,      90,      135,      90,         400  },       // 雙手插腰 右前左後 蹲下
  {  135,     175,     40,      80,     135,    180,    170,     60,     200,     90,      190,     135,     185,     220,      90,      135,      90,         300  },       // 等待

  {  135,     135,    135,    135,    135,    135,    170,     60,     200,     90,      135,     135,     135,     135,     135,     135,      90,         300  },       // 雙手插腰
  {  135,     175,     40,      80,     135,     80,     170,     60,     200,     90,       90,      135,     185,     220,      90,      135,      90,         400  },       // 雙手插腰 左前右後 蹲下
  {  135,     175,     40,      80,     135,     80,     170,     60,     200,     90,       90,      135,     185,     220,      90,      135,      90,         300  },       // 等待

  {  135,     135,    135,    135,    135,    135,    170,     60,     200,     90,      135,     135,     135,     135,     135,     135,      90,         300  },       // 雙手插腰
  {  135,     135,    135,    135,    135,     45,     210,    135,    180,     45,      270,     135,     135,     135,     135,     135,      90,         300  },       // 右手摸頭 左手前指
  {  135,     135,    135,    135,    135,     45,     210,    135,    180,     45,      270,     135,     135,     135,     135,     135,      90,         500  },       // 等待

  {  135,     135,    135,    135,    135,    135,    170,     60,     200,     90,      135,     135,     135,     135,     135,     135,      90,         500  },       // 雙手插腰
  {  135,     135,    135,    135,    135,      5,      210,     90,     135,     45,      230,     135,     135,     135,     135,     135,      90,         300  },       // 左手摸頭 右手前指
  {  135,     135,    135,    135,    135,      5,      210,     90,     135,     45,      230,     135,     135,     135,     135,     135,      90,         500  },       // 等待

  {  135,     135,    135,    135,    135,    135,    170,     60,     200,     90,      135,     135,     135,     135,     135,     135,      90,         500  },       // 雙手插腰
  {  135,     135,    135,    135,    135,    135,    200,    135,    135,     60,      135,     135,     135,     135,     135,     135,      90,         500  }        // 立正
};



/*============================================================================*/
// 拍手動作
int Servo_Prg_7_Step = 11;
int Servo_Prg_7 [][ALLMATRIX] PROGMEM = {
  //    0    ,    1    ,    2    ,    3    ,    4    ,    5    ,    6    ,    7    ,    8    ,    9    ,    10   ,    11   ,    12   ,    13   ,    14   ,    15   ,   G12    ,    ms
  {  135,     135,    135,    135,    135,    135,    200,    135,    135,     60,      135,     135,     135,     135,     135,     135,      90,         50    },  // 1
  {  135,     135,    135,    135,    135,     66,     200,    135,    135,     60,      195,     135,     135,     135,     135,     135,      90,         450  },  // 2
  {  135,     135,    135,    135,    135,     66,     200,     89,     181,     60,      195,     135,     135,     135,     135,     135,      90,         150  },  // 3

  {  135,     135,    135,    135,    135,     68,     230,     82,     187,     35,      193,     135,     135,     135,     135,     135,      90,         180  },  // 4
  {  135,     135,    135,    135,    135,     68,     215,     82,     187,     50,      193,     135,     135,     135,     135,     135,      90,         250  },  // 5

  {  135,     135,    135,    135,    135,     68,     230,     82,     187,     35,      193,     135,     135,     135,     135,     135,      90,         180  },  // 4
  {  135,     135,    135,    135,    135,     68,     215,     82,     187,     50,      193,     135,     135,     135,     135,     135,      90,         250  },  // 5

  {  135,     135,    135,    135,    135,     68,     230,     82,     187,     35,      193,     135,     135,     135,     135,     135,      90,         180  },  // 4
  {  135,     135,    135,    135,    135,     68,     215,     82,     187,     50,      193,     135,     135,     135,     135,     135,      90,         250  },  // 5

  {  135,     135,    135,    135,    135,     66,     184,    115,    155,     76,      195,     135,     135,     135,     135,     135,      90,         350  },  // 6
  {  135,     135,    135,    135,    135,    135,    200,    135,    135,     60,      135,     135,     135,     135,     135,     135,      90,         700  }   // 立正
};



/*============================================================================*/
// 固力果動作
int Servo_Prg_8_Step = 6;
int Servo_Prg_8 [][ALLMATRIX] PROGMEM = {
  //    0    ,    1    ,    2    ,    3    ,    4    ,    5    ,    6    ,    7    ,    8    ,    9    ,    10   ,    11   ,    12   ,    13   ,    14   ,    15   ,   G12    ,    ms
  {  135,     135,    135,    135,    135,    135,    105,    135,    135,    155,     135,     135,     135,     135,     135,     135,      90,         500   },
  {  125,     135,    135,    135,    125,    135,    105,    135,    135,    155,     135,     125,     135,     135,     135,     120,      90,         500   },
  {  125,     135,     55,      75,     125,    135,    105,    135,    135,    155,     135,     130,     135,     135,     135,     115,      90,         800   },
  {  125,     135,     55,      75,     125,    135,    105,    135,    135,    155,     135,     130,     135,     135,     135,     115,      90,         1500 },
  {  125,     135,    135,    135,    125,    135,    105,    135,    135,    155,     135,     125,     135,     135,     135,     120,      90,         800   },
  {  135,     135,    135,    135,    135,    135,    200,    135,    135,     60,      135,     135,     135,     135,     135,     135,      90,         800   }      // 立正
};


/*============================================================================*/
// 跳舞動作

int Servo_Prg_9_Step = 61;
int Servo_Prg_9 [][ALLMATRIX] PROGMEM = {
  //    0    ,    1    ,    2    ,    3    ,    4    ,    5    ,    6    ,    7    ,    8    ,    9    ,    10   ,    11   ,    12   ,    13   ,    14   ,    15   ,   G12    ,    ms
  {135,     135,     135,     135,     135,     135,     200,     135,     135,     60,      135,     135,     135,     135,     135,     135,     90,      400  },
  {135,     135,     135,     135,     135,     60,      190,     65,      205,     70,      215,     135,     135,     135,     135,     135,     90,      300  },
  {135,     162,     70,      92,      135,     60,      190,     65,      205,     70,      215,     135,     175,     200,     108,     135,     90,      300  },
  {135,     135,     135,     135,     135,     60,      190,     65,      205,     70,      215,     135,     135,     135,     135,     135,     90,      300  },
  {135,     162,     70,      92,      135,     60,      190,     65,      205,     70,      215,     135,     175,     200,     108,     135,     90,      300  },
  {135,     135,     135,     135,     135,     60,      190,     65,      205,     70,      215,     135,     135,     135,     135,     135,     90,      300  },
  {135,     162,     70,      92,      135,     60,      190,     65,      205,     70,      215,     135,     175,     200,     108,     135,     90,      300  },
  {135,     135,     135,     135,     135,     60,      190,     65,      205,     70,      215,     135,     135,     135,     135,     135,     90,      300  },
  {135,     162,     70,      92,      135,     60,      190,     65,      205,     70,      215,     135,     175,     200,     108,     135,     90,      300  },
  {135,     135,     135,     135,     135,     60,      190,     65,      205,     70,      215,     135,     135,     135,     135,     135,     90,      200  },
  {135,     135,     135,     135,     135,     85,      200,     135,     135,     60,      185,     135,     135,     135,     135,     135,     90,      100  },
  {130,     115,     120,     95,      130,     45,      200,     135,     135,     105,     245,     140,     145,     170,     105,     140,     50,      450  },
  {135,     135,     135,     135,     135,     85,      200,     135,     135,     60,      185,     135,     135,     135,     135,     135,     90,      100  },
  {125,     155,     125,     145,     130,     40,      155,     135,     135,     60,      135,     140,     175,     170,     140,     140,     130,     450  },
  {135,     162,     70,      87,      135,     85,      200,     135,     135,     60,      185,     135,     180,     200,     108,     135,     90,      200  },
  {130,     135,     135,     135,     127,     40,      200,     135,     135,     60,      235,     143,     135,     135,     135,     140,     90,      400  },
  {135,     162,     70,      87,      135,     85,      200,     135,     135,     60,      185,     135,     180,     200,     108,     135,     90,      200  },
  {130,     135,     135,     135,     127,     40,      200,     135,     135,     60,      235,     143,     135,     135,     135,     140,     90,      400  },
  {135,     162,     70,      87,      135,     85,      200,     135,     135,     60,      185,     135,     180,     200,     108,     135,     90,      200  },
  {135,     135,     135,     135,     135,     45,      200,     135,     135,     105,     245,     150,     135,     135,     135,     150,     50,      400  },
  {135,     135,     135,     135,     135,     85,      200,     135,     135,     60,      185,     135,     135,     135,     135,     135,     90,      100  },
  {135,     135,     135,     135,     135,     40,      155,     135,     135,     60,      135,     135,     135,     135,     135,     135,     130,     450  },
  {135,     135,     135,     135,     135,     85,      200,     135,     135,     60,      185,     135,     135,     135,     135,     135,     90,      100  },
  {130,     135,     135,     135,     127,     40,      200,     135,     135,     60,      235,     143,     135,     135,     135,     140,     90,      450  },
  {135,     135,     135,     135,     135,     85,      200,     135,     135,     60,      185,     135,     135,     135,     135,     135,     90,      100  },
  {130,     135,     135,     135,     127,     40,      200,     135,     135,     60,      235,     143,     135,     135,     135,     140,     90,      450  },
  {130,     135,     135,     135,     127,     85,      200,     135,     135,     60,      185,     143,     135,     135,     135,     140,     90,      450  },
  {130,     135,     135,     135,     127,     40,      200,     70,      195,     60,      195,     143,     135,     135,     135,     140,     90,      300  },
  {130,     135,     135,     135,     127,     75,      200,     70,      195,     60,      230,     143,     135,     135,     135,     140,     90,      300  },
  {130,     135,     135,     135,     127,     40,      200,     70,      195,     60,      195,     143,     135,     135,     135,     140,     90,      300  },
  {130,     135,     135,     135,     127,     75,      200,     70,      195,     60,      230,     143,     135,     135,     135,     140,     90,      300  },
  {130,     135,     135,     135,     127,     40,      200,     70,      195,     60,      195,     143,     135,     135,     135,     140,     90,      300  },
  {130,     135,     135,     135,     127,     75,      200,     70,      195,     60,      230,     143,     135,     135,     135,     140,     90,      300  },
  {130,     135,     135,     135,     127,     40,      200,     70,      195,     60,      195,     143,     135,     135,     135,     140,     90,      300  },
  {130,     135,     135,     135,     127,     75,      200,     70,      195,     60,      230,     143,     135,     135,     135,     140,     90,      300  },
  {130,     135,     135,     135,     127,     40,      200,     70,      195,     60,      195,     143,     135,     135,     135,     140,     90,      300  },
  {130,     135,     135,     135,     127,     75,      200,     70,      195,     60,      230,     143,     135,     135,     135,     140,     90,      300  },
  {130,     135,     135,     135,     127,     40,      200,     135,     135,     60,      235,     143,     135,     135,     135,     140,     90,      400  },
  {130,     135,     135,     135,     127,     40,      200,     135,     105,     125,     235,     143,     135,     135,     135,     140,     50,      400  },
  {130,     135,     135,     135,     127,     40,      125,     155,     135,     60,      235,     143,     135,     135,     135,     140,     130,     400  },
  {130,     135,     135,     135,     127,     40,      200,     135,     105,     125,     235,     143,     135,     135,     135,     140,     50,      450  },
  {130,     135,     135,     135,     127,     40,      125,     155,     135,     60,      235,     143,     135,     135,     135,     140,     130,     450  },
  {130,     135,     135,     135,     127,     85,      200,     135,     135,     60,      185,     143,     135,     135,     135,     140,     90,      450  },
  {130,     135,     135,     135,     127,     40,      200,     70,      195,     60,      195,     143,     135,     135,     135,     140,     90,      300  },
  {130,     135,     135,     135,     127,     75,      200,     70,      195,     60,      230,     143,     135,     135,     135,     140,     90,      300  },
  {130,     135,     135,     135,     127,     40,      200,     70,      195,     60,      195,     143,     135,     135,     135,     140,     90,      300  },
  {130,     135,     135,     135,     127,     75,      200,     70,      195,     60,      230,     143,     135,     135,     135,     140,     90,      300  },
  {130,     135,     135,     135,     127,     40,      200,     70,      195,     60,      195,     143,     135,     135,     135,     140,     90,      300  },
  {130,     135,     135,     135,     127,     75,      200,     70,      195,     60,      230,     143,     135,     135,     135,     140,     90,      300  },
  {130,     135,     135,     135,     127,     40,      200,     70,      195,     60,      195,     143,     135,     135,     135,     140,     90,      300  },
  {130,     135,     135,     135,     127,     75,      200,     70,      195,     60,      230,     143,     135,     135,     135,     140,     90,      300  },
  {130,     135,     135,     135,     127,     40,      200,     70,      195,     60,      195,     143,     135,     135,     135,     140,     90,      300  },
  {130,     135,     135,     135,     127,     75,      200,     70,      195,     60,      230,     143,     135,     135,     135,     140,     90,      300  },
  {130,     135,     135,     135,     127,     40,      200,     70,      195,     60,      195,     143,     135,     135,     135,     140,     90,      300  },
  {130,     135,     135,     135,     127,     75,      200,     70,      195,     60,      230,     143,     135,     135,     135,     140,     90,      300  },
  {130,     135,     135,     135,     127,     85,      200,     135,     135,     60,      185,     143,     135,     135,     135,     140,     90,      450  },
  {130,     135,     135,     135,     127,     40,      200,     135,     135,     60,      235,     143,     135,     135,     135,     140,     90,      450  },
  {135,     135,     135,     135,     135,     45,      185,     75,      215,     95,      135,     135,     135,     135,     135,     135,     50,      500  },
  {135,     135,     135,     135,     135,     85,      200,     135,     135,     60,      185,     135,     135,     135,     135,     135,     90,      400  },
  {135,     135,     135,     135,     135,     135,     165,     75,      185,     115,     235,     135,     135,     135,     135,     135,     130,     500  },
  {135,     135,     135,     135,     135,     135,     200,     135,     135,     60,      135,     135,     135,     135,     135,     135,     90,      300  },
};


/*============================================================================*/
// 前進動作
int Servo_Prg_10_Step = 15;
int Servo_Prg_10 [][ALLMATRIX] PROGMEM = {
  //    0    ,    1    ,    2    ,    3    ,    4    ,    5    ,    6    ,    7    ,    8    ,    9    ,    10   ,    11   ,    12   ,    13   ,    14   ,    15   ,   G12    ,    ms
  {  149,     135,    135,    135,    145,    135,    189,    123,    147,     71,      135,     145,     135,     135,     135,     149,      90,         200  },  // 1

  {  149,     139,    135,    135,    145,    135,    189,    123,    147,     71,      135,     145,     167,     196,     102,     149,      90,         120  },  // 2
  {  149,     139,    135,    135,    145,    121,    189,    123,    147,     71,      116,     145,     179,     175,     127,     155,      90,         200  },  // 3
  {  124,     155,    118,    135,    127,    107,    189,    123,    147,     71,      120,     127,     160,     165,     121,     120,      90,         250  },  // 4
  {  124,     168,     74,     102,    127,    135,    189,    123,    147,     71,      135,     127,     135,     135,     131,     120,      90,         120  },  // 5
  {  124,     143,     95,      90,     127,    154,    189,    123,    147,     71,      149,     127,     135,     135,     131,     120,      90,         200  },  // 6
  {  149,     149,    105,    112,    145,    150,    189,    123,    147,     71,      163,     145,     135,     152,     115,     149,      90,         250  },  // 7

  {  149,     139,    135,    135,    145,    135,    189,    123,    147,     71,      135,     145,     167,     196,     102,     149,      90,         120  },  // 2
  {  149,     139,    135,    135,    145,    121,    189,    123,    147,     71,      116,     145,     179,     175,     127,     155,      90,         200  },  // 3
  {  124,     155,    118,    135,    127,    107,    189,    123,    147,     71,      120,     127,     160,     165,     121,     120,      90,         250  },  // 4
  {  124,     168,     74,     102,    127,    135,    189,    123,    147,     71,      135,     127,     135,     135,     131,     120,      90,         120  },  // 5
  {  124,     143,     95,      90,     127,    154,    189,    123,    147,     71,      149,     127,     135,     135,     131,     120,      90,         200  },  // 6
  {  149,     149,    105,    112,    145,    150,    189,    123,    147,     71,      163,     145,     135,     152,     115,     149,      90,         250  },  // 7

  {  149,     135,    135,    135,    142,    135,    189,    123,    147,     71,      135,     145,     162,     196,     106,     149,      90,         120  },  // 8
  {  135,     135,    135,    135,    135,    135,    200,    135,    135,     60,      135,     135,     135,     135,     135,     135,      90,         300  }   // 立正
};


/*============================================================================*/
// 後退動作
int Servo_Prg_11_Step = 15;
int Servo_Prg_11 [][ALLMATRIX] PROGMEM = {
  //    0    ,    1    ,    2    ,    3    ,    4    ,    5    ,    6    ,    7    ,    8    ,    9    ,    10   ,    11   ,    12   ,    13   ,    14   ,    15   ,   G12    ,    ms
  {  149,     135,    135,    135,    145,    135,    189,    123,    147,     71,      135,     145,     135,     135,     135,     149,      90,         200 },  // 1

  {  149,     135,    135,    135,    145,    135,    189,    123,    147,     71,      135,     145,     162,     196,     106,     149,      90,         120 },  // 2
  {  149,     135,    125,    119,    145,    150,    189,    123,    147,     71,      163,     145,     137,     152,     116,     149,      90,         160 },  // 3
  {  120,     138,     95,      96,     129,    154,    189,    123,    147,     71,      149,     129,     135,     135,     135,     124,      90,         200 },  // 4
  {  124,     164,     74,     108,    129,    135,    189,    123,    147,     71,      135,     129,     135,     135,     135,     124,      90,         120 },  // 5
  {  124,     154,    118,    133,    129,    107,    189,    123,    147,     71,      120,     129,     151,     145,     135,     124,      90,         160 },  // 6
  {  149,     135,    135,    135,    145,    121,    189,    123,    147,     71,      116,     145,     174,     175,     132,     154,      90,         200 },  // 7

  {  149,     135,    135,    135,    145,    135,    189,    123,    147,     71,      135,     145,     162,     196,     106,     149,      90,         120 },  // 2
  {  149,     135,    125,    119,    145,    150,    189,    123,    147,     71,      163,     145,     137,     152,     116,     149,      90,         160 },  // 3
  {  120,     138,     95,      96,     129,    154,    189,    123,    147,     71,      149,     129,     135,     135,     135,     124,      90,         200 },  // 4
  {  124,     164,     74,     108,    129,    135,    189,    123,    147,     71,      135,     129,     135,     135,     135,     124,      90,         120 },  // 5
  {  124,     154,    118,    133,    129,    107,    189,    123,    147,     71,      120,     129,     151,     145,     135,     124,      90,         160 },  // 6
  {  149,     135,    135,    135,    145,    121,    189,    123,    147,     71,      116,     145,     174,     175,     132,     154,      90,         200 },  // 7

  {  149,     135,    135,    135,    145,    135,    189,    123,    147,     71,      135,     145,     162,     196,     106,     149,      90,         120 },  // 8
  {  135,     135,    135,    135,    135,    135,    200,    135,    135,     60,      135,     135,     135,     135,     135,     135,      90,         300 }  // 立正
};


/*============================================================================*/
// 左轉動作
int Servo_Prg_12_Step = 20;
int Servo_Prg_12 [][ALLMATRIX] PROGMEM = {
  //    0    ,    1    ,    2    ,    3    ,    4    ,    5    ,    6    ,    7    ,    8    ,    9    ,    10   ,    11   ,    12   ,    13   ,    14   ,    15   ,   G12    ,    ms
  {  135,     135,    135,    135,    135,    135,    200,    135,    135,     60,      135,     135,     135,     135,     135,     135,      90,         200  },  // 1
  {  140,     127,     95,      90,     130,    135,    170,    135,    135,     90,      135,     140,     120,     145,     110,     145,     120,        350  },  // 2 腳前後拉開
  {  150,     130,    115,     95,     140,    135,    200,    135,    135,     60,      135,     140,     165,     165,     110,     145,      90,         200  },  // 3
  {  135,     135,    135,    135,    135,    135,    200,    135,    135,     60,      135,     135,     135,     135,     135,     135,      90,         300  },   // 立正
  {  135,     135,    135,    135,    135,    135,    200,    135,    135,     60,      135,     135,     135,     135,     135,     135,      90,         200  },  // 1
  {  140,     127,     95,      90,     130,    135,    170,    135,    135,     90,      135,     140,     120,     145,     110,     145,     120,        350  },  // 2 腳前後拉開
  {  150,     130,    115,     95,     140,    135,    200,    135,    135,     60,      135,     140,     165,     165,     110,     145,      90,         200  },  // 3
  {  135,     135,    135,    135,    135,    135,    200,    135,    135,     60,      135,     135,     135,     135,     135,     135,      90,         300  },   // 立正
  {  135,     135,    135,    135,    135,    135,    200,    135,    135,     60,      135,     135,     135,     135,     135,     135,      90,         200  },  // 1
  {  140,     127,     95,      90,     130,    135,    170,    135,    135,     90,      135,     140,     120,     145,     110,     145,     120,        350  },  // 2 腳前後拉開
  {  150,     130,    115,     95,     140,    135,    200,    135,    135,     60,      135,     140,     165,     165,     110,     145,      90,         200  },  // 3
  {  135,     135,    135,    135,    135,    135,    200,    135,    135,     60,      135,     135,     135,     135,     135,     135,      90,         300  },   // 立正
  {  135,     135,    135,    135,    135,    135,    200,    135,    135,     60,      135,     135,     135,     135,     135,     135,      90,         200  },  // 1
  {  140,     127,     95,      90,     130,    135,    170,    135,    135,     90,      135,     140,     120,     145,     110,     145,     120,        350  },  // 2 腳前後拉開
  {  150,     130,    115,     95,     140,    135,    200,    135,    135,     60,      135,     140,     165,     165,     110,     145,      90,         200  },  // 3
  {  135,     135,    135,    135,    135,    135,    200,    135,    135,     60,      135,     135,     135,     135,     135,     135,      90,         300  },   // 立正
  {  135,     135,    135,    135,    135,    135,    200,    135,    135,     60,      135,     135,     135,     135,     135,     135,      90,         200  },  // 1
  {  140,     127,     95,      90,     130,    135,    170,    135,    135,     90,      135,     140,     120,     145,     110,     145,     120,        350  },  // 2 腳前後拉開
  {  150,     130,    115,     95,     140,    135,    200,    135,    135,     60,      135,     140,     165,     165,     110,     145,      90,         200  },  // 3
  {  135,     135,    135,    135,    135,    135,    200,    135,    135,     60,      135,     135,     135,     135,     135,     135,      90,         300  }   // 立正
};


/*============================================================================*/
// 右轉動作
int Servo_Prg_13_Step = 20;
int Servo_Prg_13 [][ALLMATRIX] PROGMEM = {
  //    0    ,    1    ,    2    ,    3    ,    4    ,    5    ,    6    ,    7    ,    8    ,    9    ,    10   ,    11   ,    12   ,    13   ,    14   ,    15   ,   G12    ,    ms
  {  135,     135,    135,    135,    135,    135,    200,    135,    135,     60,      135,     135,     135,     135,     135,     135,      90,         200  },  // 1
  {  122,     155,    125,    150,    130,    135,    170,    135,    135,     90,      135,     140,     180,     175,     140,     132,      60,         350  },  // 2 腳前後拉開
  {  125,     160,    105,    105,    130,    135,    200,    135,    135,     60,      135,     130,     175,     155,     140,     120,      90,         200  },  // 3
  {  135,     135,    135,    135,    135,    135,    200,    135,    135,     60,      135,     135,     135,     135,     135,     135,      90,         300  },   // 立正
  {  135,     135,    135,    135,    135,    135,    200,    135,    135,     60,      135,     135,     135,     135,     135,     135,      90,         200  },  // 1
  {  122,     155,    125,    150,    130,    135,    170,    135,    135,     90,      135,     140,     180,     175,     140,     132,      60,         350  },  // 2 腳前後拉開
  {  125,     160,    105,    105,    130,    135,    200,    135,    135,     60,      135,     130,     175,     155,     140,     120,      90,         200  },  // 3
  {  135,     135,    135,    135,    135,    135,    200,    135,    135,     60,      135,     135,     135,     135,     135,     135,      90,         300  },   // 立正
  {  135,     135,    135,    135,    135,    135,    200,    135,    135,     60,      135,     135,     135,     135,     135,     135,      90,         200  },  // 1
  {  122,     155,    125,    150,    130,    135,    170,    135,    135,     90,      135,     140,     180,     175,     140,     132,      60,         350  },  // 2 腳前後拉開
  {  125,     160,    105,    105,    130,    135,    200,    135,    135,     60,      135,     130,     175,     155,     140,     120,      90,         200  },  // 3
  {  135,     135,    135,    135,    135,    135,    200,    135,    135,     60,      135,     135,     135,     135,     135,     135,      90,         300  },   // 立正
  {  135,     135,    135,    135,    135,    135,    200,    135,    135,     60,      135,     135,     135,     135,     135,     135,      90,         200  },  // 1
  {  122,     155,    125,    150,    130,    135,    170,    135,    135,     90,      135,     140,     180,     175,     140,     132,      60,         350  },  // 2 腳前後拉開
  {  125,     160,    105,    105,    130,    135,    200,    135,    135,     60,      135,     130,     175,     155,     140,     120,      90,         200  },  // 3
  {  135,     135,    135,    135,    135,    135,    200,    135,    135,     60,      135,     135,     135,     135,     135,     135,      90,         300  },   // 立正
  {  135,     135,    135,    135,    135,    135,    200,    135,    135,     60,      135,     135,     135,     135,     135,     135,      90,         200  },  // 1
  {  122,     155,    125,    150,    130,    135,    170,    135,    135,     90,      135,     140,     180,     175,     140,     132,      60,         350  },  // 2 腳前後拉開
  {  125,     160,    105,    105,    130,    135,    200,    135,    135,     60,      135,     130,     175,     155,     140,     120,      90,         200  },  // 3
  {  135,     135,    135,    135,    135,    135,    200,    135,    135,     60,      135,     135,     135,     135,     135,     135,      90,         300  }   // 立正
  };


/*============================================================================*/
// 左橫移動作
int Servo_Prg_14_Step = 7;
int Servo_Prg_14 [][ALLMATRIX] PROGMEM = {
  //    0    ,    1    ,    2    ,    3    ,    4    ,    5    ,    6    ,    7    ,    8    ,    9    ,    10   ,    11   ,    12   ,    13   ,    14   ,    15   ,   G12    ,    ms
  {  129,     135,    135,    135,    133,    135,    200,    135,    135,     60,      135,     133,     135,     135,     135,     129,      90,         50   },  // 1
  {  133,     151,    100,    117,    131,    135,    190,    135,    135,     70,      135,     132,     135,     135,     136,     127,      90,         50   },  // 2
  {  122,     144,    114,    124,    120,    135,    190,    135,    135,     70,      135,     132,     135,     135,     136,     130,      90,         50   },  // 3
  {  125,     151,    105,    117,    120,    135,    190,    135,    135,     70,      135,     133,     144,     148,     130,     138,      90,         50   },  // 4
  {  143,     140,    122,    126,    142,    135,    190,    135,    135,     70,      135,     150,     140,     137,     140,     157,      90,         120  }, // 5
  {  141,     140,    122,    126,    138,    135,    190,    135,    135,     70,      135,     139,     156,     176,     116,     145,      90,         120  }, // 6
  {  135,     135,    135,    135,    135,    135,    200,    135,    135,     60,      135,     135,     135,     135,     135,     135,      90,         120  }  // 立正
};


/*============================================================================*/
// 右橫移動作
int Servo_Prg_15_Step = 7;
int Servo_Prg_15 [][ALLMATRIX] PROGMEM = {
  //    0    ,    1    ,    2    ,    3    ,    4    ,    5    ,    6    ,    7    ,    8    ,    9    ,    10   ,    11   ,    12   ,    13   ,    14   ,    15   ,   G12    ,    ms
  {  141,     135,    135,    135,    136,    135,    200,    135,    135,     60,      135,     136,     135,     135,     135,     141,      90,         50   },  // 1
  {  143,     134,    135,    135,    138,    135,    190,    135,    135,     70,      135,     137,     153,     170,     119,     137,      90,         50   },  // 2
  {  140,     134,    135,    135,    138,    135,    190,    135,    135,     70,      135,     145,     146,     156,     126,     148,      90,         50   },  // 3
  {  132,     140,    122,    126,    138,    135,    190,    135,    135,     70,      135,     145,     153,     165,     119,     143,      90,         50   },  // 4
  {  113,     130,    133,    130,    122,    135,    190,    135,    135,     70,      135,     130,     144,     148,     130,     127,      90,         120 },  // 5
  {  125,     154,     94,     114,    132,    135,    190,    135,    135,     70,      135,     133,     144,     148,     130,     129,      90,         120 },  // 6
  {  135,     135,    135,    135,    135,    135,    200,    135,    135,     60,      135,     135,     135,     135,     135,     135,      90,         120 }   // 立正
};


/*============================================================================*/
//  仰躺起立動作
int Servo_Prg_20_Step = 10;
int Servo_Prg_20 [][ALLMATRIX] PROGMEM = {
  //    0    ,    1    ,    2    ,    3    ,    4    ,    5    ,    6    ,    7    ,    8    ,    9    ,    10   ,    11   ,    12   ,    13   ,    14   ,    15   ,   G12    ,    ms
  {  135,     225,    135,    135,    135,     45,     200,    135,    135,     60,      230,     135,     135,     135,     35,       135,      90,         500  },      // 立正 雙手平舉 腳底朝上
  {  135,     225,    135,     50,     135,     45,     210,    135,    135,     45,      230,     135,     215,     135,     35,       135,      90,         500  },      // 立正 雙手平舉朝前 腳底朝上 坐起
  {  135,     225,    135,     50,      35,      45,     210,    135,    135,     45,      230,     225,     215,     135,     35,       135,      90,         500  },      // 立正 雙手平舉朝前 腳底朝上 坐起 劈腿
  {   50,      135,    135,    125,     35,      45,     210,    135,    135,     45,      230,     225,     145,     135,     135,     210,      90,         800  },      // 雙手平舉 轉臂朝後推起 劈腿微朝前 腳掌朝下
  {  135,     135,     90,     170,     35,      45,     210,    135,    135,     45,      230,     225,      90,      180,     135,     135,      90,         800  },      // 雙手平舉 劈腿朝後
  {  135,     135,     90,     170,    135,     45,     210,    135,    135,     45,      230,     135,      90,      180,     135,     135,      90,         600  },      // 雙手平舉 劈腿朝後 趴跪姿

  {  135,     185,    135,     30,     135,     20,     210,    135,    135,     45,      250,     135,     230,     135,      80,      135,      90,         800  },      // 立正 轉臂朝前推起 前彎腰收腳
  {  135,      70,     165,     30,     135,     20,     210,    135,    135,     45,      250,     135,     230,     105,     190,     135,      90,         600  },      // 立正 雙腳前踩重心向後
  {  135,      85,     165,    100,    135,    135,    200,    135,    135,     60,      135,     135,     165,     105,     175,     135,      90,         800  },      // 立正 挺腰起身
  {  135,     135,    135,    135,    135,    135,    200,    135,    135,     60,      135,     135,     135,     135,     135,     135,      90,         500  }       // 立正
};


/*============================================================================*/
// 仆街起立動作
int Servo_Prg_21_Step = 7;
int Servo_Prg_21 [][ALLMATRIX] PROGMEM = {
  //    0    ,    1    ,    2    ,    3    ,    4    ,    5    ,    6    ,    7    ,    8    ,    9    ,    10   ,    11   ,    12   ,    13   ,    14   ,    15   ,   G12    ,    ms
  {  135,     135,    135,    135,    135,    135,    200,    135,    135,     60,      135,     135,     135,     135,     135,     135,      90,         500  },      // 立正
  {  135,     135,    135,    135,    135,    135,    125,    135,    135,    145,     135,     135,     135,     135,     135,     135,      90,         500  },      // 立正 雙手平舉
  {  135,     135,    135,    135,    135,     20,     125,    135,    135,    145,     250,     135,     135,     135,     135,     135,      90,         500  },      // 立正 雙手平舉朝下
  {  135,     185,    135,     30,     135,     20,     210,    135,    135,     45,      250,     135,     230,     135,      80,      135,      90,         800  },      // 立正 轉臂朝前推起 前彎腰收腳
  {  135,      70,     165,     30,     135,     20,     210,    135,    135,     45,      250,     135,     230,     105,     190,     135,      90,         600  },      // 立正 雙腳前踩重心向後
  {  135,      85,     165,    100,    135,    135,    200,    135,    135,     60,      135,     135,     165,     105,     175,     135,      90,         800  },      // 立正 挺腰起身
  {  135,     135,    135,    135,    135,    135,    200,    135,    135,     60,      135,     135,     135,     135,     135,     135,      90,         500  }       // 立正
};



/*============================================================================*/
void Set_PWM_to_Servo(int iServo, int iValue)
{
  int NewPWM = map(iValue, PWMRES_Min, PWMRES_Max, SERVOMIN, SERVOMAX);
  
  if (iServo >= 16)
  {
    GPIO12SERVO.write(iValue);
  }
  else
  {
    pwm.setPWM(iServo, 0, NewPWM);
  }

}


/*============================================================================*/
void Servo_PROGRAM_Zero()
{
  // 清除備份目前馬達數值
  for ( int Index = 0; Index < ALLMATRIX; Index++)
  {
    Running_Servo_POS[Index] = Servo_Act_0[Index] + (int8_t)EEPROM.read(Index);
  }

  // 重新載入馬達預設數值
  for (int iServo = 0; iServo < ALLSERVOS; iServo++)
  {
    Set_PWM_to_Servo(iServo, Running_Servo_POS[iServo]);
    delay(10);
  }
}


/*============================================================================*/
void Servo_PROGRAM_Center()
{
  // 清除備份目前馬達數值
  for ( int Index = 0; Index < ALLMATRIX; Index++)
  {
    Running_Servo_POS[Index] = Servo_Act_1[Index] + (int8_t)EEPROM.read(Index);
  }

  // 重新載入馬達預設數值
  for (int iServo = 0; iServo < ALLSERVOS; iServo++)
  {
    Set_PWM_to_Servo(iServo, Running_Servo_POS[iServo]);
    delay(10);
  }
}


/*
 * run motion but it will block
 */ 
void Servo_PROGRAM_Run(int iMatrix[][ALLMATRIX],  int iSteps)
{
  int INT_TEMP_A, INT_TEMP_B, INT_TEMP_C;

  for ( int MainLoopIndex = 0; MainLoopIndex < iSteps; MainLoopIndex++)  // iSteps 步驟主迴圈
  {
    // InterTotalTime 此步驟總時間
    int InterTotalTime = iMatrix [ MainLoopIndex ] [ ALLMATRIX - 1 ] + (int8_t)EEPROM.read(ALLMATRIX - 1);

    // InterDelayCounter 此步驟基本延遲次數
    int InterDelayCounter = InterTotalTime / BASEDELAYTIME;

    // 內差次數迴圈
    for ( int InterStepLoop = 0; InterStepLoop < InterDelayCounter; InterStepLoop++)
    {

      for (int ServoIndex = 0; ServoIndex < ALLSERVOS; ServoIndex++)  // 馬達主迴圈
      {

        INT_TEMP_A = Running_Servo_POS[ServoIndex];                                                    // 馬達現在位置 INT_TEMP_A
        INT_TEMP_B = iMatrix[MainLoopIndex][ServoIndex] + (int8_t)EEPROM.read(ServoIndex);    // 馬達目標位置 INT_TEMP_B

        if (INT_TEMP_A == INT_TEMP_B)         // 馬達數值不變
        {
          INT_TEMP_C = INT_TEMP_B;
        }

        else if (INT_TEMP_A > INT_TEMP_B)   // 馬達數值減少
        {
          // PWM內差值 = map( 執行次數時間累加, 開始時間, 結束時間, 內差起始值, 內差最大值 )
          INT_TEMP_C =  map(BASEDELAYTIME * InterStepLoop, 0, InterTotalTime, 0, INT_TEMP_A - INT_TEMP_B);

          if (INT_TEMP_A - INT_TEMP_C >= INT_TEMP_B)
          {
            Set_PWM_to_Servo(ServoIndex, INT_TEMP_A - INT_TEMP_C);
          }
        }

        else if (INT_TEMP_A < INT_TEMP_B)   // 馬達數值增加
        {
          // PWM內差值 = map( 執行次數時間累加, 開始時間, 結束時間, 內差起始值, 內差最大值 )
          INT_TEMP_C =  map(BASEDELAYTIME * InterStepLoop, 0, InterTotalTime, 0, INT_TEMP_B - INT_TEMP_A);

          if (INT_TEMP_A + INT_TEMP_C <= INT_TEMP_B)
          {
            Set_PWM_to_Servo(ServoIndex, INT_TEMP_A + INT_TEMP_C);
          }
        }

      }

      delay(BASEDELAYTIME);
    }

    // 備份目前馬達數值
    for ( int Index = 0; Index < ALLMATRIX; Index++)
    {
      Running_Servo_POS[Index] = iMatrix[MainLoopIndex][Index] + (int8_t)EEPROM.read(Index);
    }

  }

}


/*============================================================================*/
void Get_PWM_Frequency()
{
  Set_PWM_Freq = PWM_Frequency + (int8_t)EEPROM.read(ALLSERVOS + 1);
}


/*============================================================================*/
void Get_Voltage_Value()
{
  Set_Voltage = Input_Voltage + (int8_t)EEPROM.read(ALLSERVOS + 2);
}


/*============================================================================*/
void writeKeyValue(int8_t key, int8_t value)
{
  EEPROM.write(key, value);
  EEPROM.commit();

  int rvalue = EEPROM.read(key);
}


/*============================================================================*/
int8_t readKeyValue(int8_t key)
{
  int8_t value = (int8_t)EEPROM.read(key) ; // EEPROM.read(key);
  return value ; // add by yougang: why no return but get value ?
}


/*============================================================================*/
void handleAction(WiFiClient client, String req, HTTPMethod method)
{
  server.send(200, "text/plain", "Hello from RoboHero !");
}


/*============================================================================*/
void handleSave()
{
  String key = server.arg("key");
  String value = server.arg("value");

  int8_t keyInt = key.toInt();
  int8_t valueInt = value.toInt();

  if (keyInt == 100)
  {
    writeKeyValue(0, 0);
    writeKeyValue(1, 0);
    writeKeyValue(2, 0);
    writeKeyValue(3, 0);
    writeKeyValue(4, 0);
    writeKeyValue(5, 0);
    writeKeyValue(6, 0);
    writeKeyValue(7, 0);
    writeKeyValue(8, 0);
    writeKeyValue(9, 0);
    writeKeyValue(10, 0);
    writeKeyValue(11, 0);
    writeKeyValue(12, 0);
    writeKeyValue(13, 0);
    writeKeyValue(14, 0);
    writeKeyValue(15, 0);
    writeKeyValue(16, 0);
    writeKeyValue(17, 0);
    //writeKeyValue(18, 0); // Set_PWM_Freq 不清除
    //writeKeyValue(19, 0); // Set_Voltage 不清除
  }
  else
  {
    // 確認資料介於 -125 ~ 125
    if (valueInt >= -125 && valueInt <= 125)
    {
      // 儲存校正值
      writeKeyValue(keyInt, valueInt);

      // 若 Set_PWM_Freq 有被修改就即時更新
      if (keyInt == 18) {
        Set_PWM_Freq = PWM_Frequency + valueInt;
        pwm.setPWMFreq(Set_PWM_Freq);
      }

      // 若 Set_Voltage 有被修改就即時更新
      if (keyInt == 19) {
        Set_Voltage = Input_Voltage + valueInt;
        Input_Voltage_Low = 0;
      }

    }
  }


  String content =  "(key, value)=(" + key + "," + value + "), but response = " ;
  content += String( readKeyValue( keyInt ) ) ;
  
  server.send(200, "text/html", content) ;
}


/*
 * handle http /controller?
 * pm: basic motion like forward, backward
 * pms: to be deprecated
 * gpid: note this is not 'gpio'
 * servo: control single servo
 */
void handleController()
{
  String pm = server.arg("pm");
  String pms = server.arg("pms");
  String gpid = server.arg("gpid");
  String gpio = server.arg("gpio"); // fix old gpid problem 
  String servo = server.arg("servo");

  if (pm != "")
  {
    Servo_PROGRAM = pm.toInt();
  }

  if (pms != "")
  {
    Servo_PROGRAM_Stack = pms.toInt();
  }

  if (servo != "" && Input_Voltage_Low == 0 )
  {
    int Servo_ID = servo.toInt();
    String ival = server.arg("value");
    int Servo_PWM = ival.toInt() + (int8_t)EEPROM.read(Servo_ID);
    int pulselength = map(Servo_PWM, PWMRES_Min, PWMRES_Max, SERVOMIN, SERVOMAX);

    if ( Servo_ID != 16 ) {
      pwm.setPWM(Servo_ID, 0, pulselength);
    }
    else if ( Servo_ID == 16 ) {
      // is head servo using GPIO add by yougang kuo 
      GPIO12_PWM = ival.toInt() + (int8_t)EEPROM.read(16);
      GPIO12SERVO.write(GPIO12_PWM);
    }
  }



  if (gpid != "" && gpio == "" ) {
    gpio = gpid ;
  }
  if (gpio != "" && Input_Voltage_Low == 0 )
  {
    GPIO_ID = gpio.toInt();

    if (GPIO_ID == 12) {
      String ival = server.arg("value");
      GPIO12_PWM = ival.toInt() + (int8_t)EEPROM.read(16);
      GPIO12SERVO.write(GPIO12_PWM);
    }
  }

  server.send(200, "text/html", "(pm, pms)=(" + pm + "," + pms + ")");
}


/*============================================================================*/
void handleGetEEPROM()
{
  int servo19Val = readKeyValue(19);
  String servo19ValStr = String(servo19Val);

  int servo18Val = readKeyValue(18);
  String servo18ValStr = String(servo18Val);

  int servo17Val = readKeyValue(17);
  String servo17ValStr = String(servo17Val);

  int servo16Val = readKeyValue(16);
  String servo16ValStr = String(servo16Val);

  int servo15Val = readKeyValue(15);
  String servo15ValStr = String(servo15Val);

  int servo14Val = readKeyValue(14);
  String servo14ValStr = String(servo14Val);

  int servo13Val = readKeyValue(13);
  String servo13ValStr = String(servo13Val);

  int servo12Val = readKeyValue(12);
  String servo12ValStr = String(servo12Val);

  int servo11Val = readKeyValue(11);
  String servo11ValStr = String(servo11Val);

  int servo10Val = readKeyValue(10);
  String servo10ValStr = String(servo10Val);

  int servo9Val = readKeyValue(9);
  String servo9ValStr = String(servo9Val);

  int servo8Val = readKeyValue(8);
  String servo8ValStr = String(servo8Val);

  int servo7Val = readKeyValue(7);
  String servo7ValStr = String(servo7Val);

  int servo6Val = readKeyValue(6);
  String servo6ValStr = String(servo6Val);

  int servo5Val = readKeyValue(5);
  String servo5ValStr = String(servo5Val);

  int servo4Val = readKeyValue(4);
  String servo4ValStr = String(servo4Val);

  int servo3Val = readKeyValue(3);
  String servo3ValStr = String(servo3Val);

  int servo2Val = readKeyValue(2);
  String servo2ValStr = String(servo2Val);

  int servo1Val = readKeyValue(1);
  String servo1ValStr = String(servo1Val);

  int servo0Val = readKeyValue(0);
  String servo0ValStr = String(servo0Val);
  
  server.send(200, "text/html", servo0ValStr + "," + servo1ValStr + "," + servo2ValStr + "," + servo3ValStr + "," + servo4ValStr + "," + servo5ValStr
              + "," + servo6ValStr + "," + servo7ValStr + "," + servo8ValStr + "," + servo9ValStr + "," + servo10ValStr + "," + servo11ValStr
              + "," + servo12ValStr + "," + servo13ValStr + "," + servo14ValStr + "," + servo15ValStr + "," + servo16ValStr + "," + servo17ValStr
              + "," + servo18ValStr + "," + servo19ValStr );
}


int lastRecvOnlineTime = 0 ;
int handleOnlineTemp[18] ;

/*
 * handle http get /online api
 * m0~m16: servo number 
 * t1: run time in ms
 */
void handleOnLine_new()
{
  lastRecvOnlineTime = millis() ;
    
  String m0 = server.arg("m0");
  String m1 = server.arg("m1");
  String m2 = server.arg("m2");
  String m3 = server.arg("m3");
  String m4 = server.arg("m4");
  String m5 = server.arg("m5");
  String m6 = server.arg("m6");
  String m7 = server.arg("m7");
  String m8 = server.arg("m8");
  String m9 = server.arg("m9");
  String m10 = server.arg("m10");
  String m11 = server.arg("m11");
  String m12 = server.arg("m12");
  String m13 = server.arg("m13");
  String m14 = server.arg("m14");
  String m15 = server.arg("m15");
  String m16 = server.arg("m16");
  String t1 = server.arg("t1");


  handleOnlineTemp[0] = m0.toInt() ;
  handleOnlineTemp[1] = m1.toInt() ; // m1.toInt() ;
  handleOnlineTemp[2] = m2.toInt() ;
  handleOnlineTemp[3] = m3.toInt() ;
  handleOnlineTemp[4] = m4.toInt() ;
  handleOnlineTemp[5] = m5.toInt() ;
  handleOnlineTemp[6] = m6.toInt() ;
  handleOnlineTemp[7] = m7.toInt() ;
  handleOnlineTemp[8] = m8.toInt() ;
  handleOnlineTemp[9] = m9.toInt() ;
  handleOnlineTemp[10] = m10.toInt() ;
  handleOnlineTemp[11] = m11.toInt() ;
  handleOnlineTemp[12] = m12.toInt() ;
  handleOnlineTemp[13] = m13.toInt() ;
  handleOnlineTemp[14] = m14.toInt() ;
  handleOnlineTemp[15] = m15.toInt() ;
  handleOnlineTemp[16] = m16.toInt() ;
  handleOnlineTemp[17] = t1.toInt() ;


  
  Serial.print( "online [" ) ;
  for ( int i = 0 ; i < 18 ; i++ ) {
    Serial.print( handleOnlineTemp[i] ) ;
    Serial.print( "," ) ;
  }
  Serial.println( "]" ) ;
  

  push( handleOnlineTemp) ;

  server.send(200, "", "");
  
  

  
  //Serial.println("End Servo Online. ========================================= ") ;
}


void handleOnLine()
{
  String m0 = server.arg("m0");
  String m1 = server.arg("m1");
  String m2 = server.arg("m2");
  String m3 = server.arg("m3");
  String m4 = server.arg("m4");
  String m5 = server.arg("m5");
  String m6 = server.arg("m6");
  String m7 = server.arg("m7");
  String m8 = server.arg("m8");
  String m9 = server.arg("m9");
  String m10 = server.arg("m10");
  String m11 = server.arg("m11");
  String m12 = server.arg("m12");
  String m13 = server.arg("m13");
  String m14 = server.arg("m14");
  String m15 = server.arg("m15");
  String m16 = server.arg("m16");
  String t1 = server.arg("t1");

  int Servo_Prg_tmp [][18] = {
    //     0,             1,              2,              3,              4,              5,              6,              7,              8,              9,               10,              11,              12,              13,              14,              15,            G12,        Time
    {m0.toInt(), m1.toInt(), m2.toInt(), m3.toInt(), m4.toInt(), m5.toInt(), m6.toInt(), m7.toInt(), m8.toInt(), m9.toInt(), m10.toInt(), m11.toInt(), m12.toInt(), m13.toInt(), m14.toInt(), m15.toInt(), m16.toInt(), t1.toInt()}
  };


  server.send(200);
  
  if ( Input_Voltage_Low == 0 ) {
    Servo_PROGRAM_Run(Servo_Prg_tmp, 1);
  }
}


/*============================================================================
  馬達歸零畫面
  ============================================================================*/
void handleZero()
{
  String content = "";
  content += "<html>";
  content += "<head>";
  content += "<title>RoboHero Zero Check</title>";
  content += " <style type=\"text/css\">";
  content += "  body {";
  content += "    color: white;";
  content += "    background-color: #000000 }";

  content += "  .pm_btn {";
  content += "  width: 160px;";
  content += "  -webkit-border-radius: 5;";
  content += "  -moz-border-radius: 5;";
  content += "  border-radius: 5px;";
  content += "  font-family: Arial;";
  content += "  color: #ffffff;";
  content += "  font-size: 24px;";
  content += "  background: #3498db;";
  content += "  padding: 10px 20px 10px 20px;";
  content += "  text-decoration: none;";
  content += "}";
  content += ".pm_text {";
  content += "width: 160px;";
  content += "-webkit-border-radius: 5;";
  content += "-moz-border-radius: 5;";
  content += "border-radius: 5px;";
  content += "font-family: Arial;";
  content += "font-size: 24px;";

  content += "padding: 10px 20px 10px 20px;";
  content += "text-decoration: none;";
  content += "}";

  content += ".pm_btn:hover {";
  content += "  background: #3cb0fd;";
  content += "  background-image: -webkit-linear-gradient(top, #3cb0fd, #3498db);";
  content += "  background-image: -moz-linear-gradient(top, #3cb0fd, #3498db);";
  content += "  background-image: -ms-linear-gradient(top, #3cb0fd, #3498db);";
  content += "  background-image: -o-linear-gradient(top, #3cb0fd, #3498db);";
  content += "  background-image: linear-gradient(to bottom, #3cb0fd, #3498db);";
  content += "  text-decoration: none;";
  content += "}";

  content += ".pms_btn {";
  content += "width: 240px;";
  content += "-webkit-border-radius: 5;";
  content += "-moz-border-radius: 5;";
  content += "border-radius: 5px;";
  content += "font-family: Arial;";
  content += "color: #ffffff;";
  content += "font-size: 24px;";
  content += "background: #3498db;";
  content += "padding: 10px 20px 10px 20px;";
  content += "text-decoration: none;";
  content += "}";

  content += ".pms_btn:hover {";
  content += "background: #3cb0fd;";
  content += "background-image: -webkit-linear-gradient(top, #3cb0fd, #3498db);";
  content += "background-image: -moz-linear-gradient(top, #3cb0fd, #3498db);";
  content += "background-image: -ms-linear-gradient(top, #3cb0fd, #3498db);";
  content += "background-image: -o-linear-gradient(top, #3cb0fd, #3498db);";
  content += "background-image: linear-gradient(to bottom, #3cb0fd, #3498db);";
  content += "text-decoration: none;";
  content += "}";
  content += "  </style>";
  content += "</head>";
  content += "<body>";

  content += "<table>";
  content += "<tr>";
  content += "<td></td>";
  content += "<td><button class=\"pm_btn\" style=\"background: #6e6e6e;\" type=\"button\" onclick=\"controlGpid(12, 90)\">GPIO 12</button></td>";
  content += "</tr>";
  content += "</table>";

  content += "<br>";

  content += "<table>";
  content += "<tr>";
  content += "<td><button class=\"pm_btn\" style=\"background: #f5da81;\" type=\"button\" onclick=\"controlServo(8,135)\">Servo 8</button></td>";
  content += "<td><button class=\"pm_btn\" style=\"background: #f5da81;\" type=\"button\" onclick=\"controlServo(7,135)\">Servo 7</button></td>";
  content += "</tr>";

  content += "<tr>";
  content += "<td><button class=\"pm_btn\" style=\"background: #bdbdbd;\" type=\"button\" onclick=\"controlServo(9,135)\">Servo 9</button></td>";
  content += "<td><button class=\"pm_btn\" style=\"background: #bdbdbd;\" type=\"button\" onclick=\"controlServo(6,135)\">Servo 6</button></td>";
  content += "</tr>";

  content += "<tr>";
  content += "<td><button class=\"pm_btn\" type=\"button\" onclick=\"controlServo(10,135)\">Servo 10</button></td>";
  content += "<td><button class=\"pm_btn\" type=\"button\" onclick=\"controlServo(5, 135)\">Servo 5</button></td>";
  content += "</tr>";
  content += "</table>";

  content += "<br>";

  content += "<table>";
  content += "<tr>";
  content += "<td><button class=\"pm_btn\" type=\"button\" onclick=\"controlServo(11,135)\">Servo 11</button></td>";
  content += "<td><button class=\"pm_btn\" type=\"button\" onclick=\"controlServo(4,135)\">Servo 4</button></td>";
  content += "</tr>";

  content += "<tr>";
  content += "<td><button class=\"pm_btn\" style=\"background: #bdbdbd;\" type=\"button\" onclick=\"controlServo(12,135)\">Servo 12</button></td>";
  content += "<td><button class=\"pm_btn\" style=\"background: #bdbdbd;\" type=\"button\" onclick=\"controlServo(3,135)\">Servo 3</button></td>";
  content += "</tr>";

  content += "<tr>";
  content += "<td><button class=\"pm_btn\" style=\"background: #f5da81;\" type=\"button\" onclick=\"controlServo(13,135)\">Servo 13</button></td>";
  content += "<td><button class=\"pm_btn\" style=\"background: #f5da81;\" type=\"button\" onclick=\"controlServo(2,135)\">Servo 2</button></td>";
  content += "</tr>";

  content += "<tr>";
  content += "<td><button class=\"pm_btn\" style=\"background: #bdbdbd;\" type=\"button\" onclick=\"controlServo(14,135)\">Servo 14</button></td>";
  content += "<td><button class=\"pm_btn\" style=\"background: #bdbdbd;\" type=\"button\" onclick=\"controlServo(1,135)\">Servo 1</button></td>";
  content += "</tr>";

  content += "<tr>";
  content += "<td><button class=\"pm_btn\" type=\"button\" onclick=\"controlServo(15,135)\">Servo 15</button></td>";
  content += "<td><button class=\"pm_btn\" type=\"button\" onclick=\"controlServo(0,135)\">Servo 0</button></td>";
  content += "</tr>";
  content += "</table>";

  content += "<br>";

  content += "<table>";
  content += "<tr>";
  content += "<td><button class=\"pm_btn\" style=\"background: #ed3db5;\" type=\"button\" onclick=\"controlPm(100)\">ALL</button></td>";
  content += "</tr>";
  content += "</table>";

  content += "<br>";

  content += "</body>";
  content += "<script>";
  content += "function controlServo(id, value) {";
  content += "  var xhttp = new XMLHttpRequest();";

  content += "  xhttp.onreadystatechange = function() {";
  content += "    if (xhttp.readyState == 4 && xhttp.status == 200) {";
  content += "     document.getElementById(\"demo\").innerHTML = xhttp.responseText;";
  content += "    }";
  content += "  };";
  content += "  xhttp.open(\"GET\", \"controller?servo=\"+id+\"&value=\"+value, true);";
  content += "  xhttp.send();";
  content += "}";
  content += "function controlGpid(id, value) {";
  content += "  var xhttp = new XMLHttpRequest();";

  content += "  xhttp.onreadystatechange = function() {";
  content += "    if (xhttp.readyState == 4 && xhttp.status == 200) {";
  content += "     document.getElementById(\"demo\").innerHTML = xhttp.responseText;";
  content += "    }";
  content += "  };";
  content += "  xhttp.open(\"GET\", \"controller?gpid=\"+id+\"&value=\"+value, true);";
  content += "  xhttp.send();";
  content += "}";

  content += "function controlPm(value) {";
  content += "  var xhttp = new XMLHttpRequest();";
  content += "  xhttp.onreadystatechange = function() {";
  content += "    if (xhttp.readyState == 4 && xhttp.status == 200) {";
  content += "     document.getElementById(\"demo\").innerHTML = xhttp.responseText;";
  content += "    }";
  content += "  };";
  content += "  xhttp.open(\"GET\", \"controller?pm=\"+value, true);";
  content += "  xhttp.send();";
  content += "}";

  content += "</script>";
  content += "</html>";

  server.send(200, "text/html", content);
}


/*============================================================================
  簡易動作編輯畫面
  ============================================================================*/
void handleEditor()
{
  String content = "";
  content += "<html>";
  content += "<head>";
  content += "  <title>RoboHero Motion Editor</title>";
  content += "  <style type=\"text/css\">";
  content += "  body {";
  content += "    color: white;";
  content += "    background-color: #000000 }";

  content += "  .pm_btn {";
  content += "  width: 160px;";
  content += "  -webkit-border-radius: 5;";
  content += "  -moz-border-radius: 5;";
  content += "  border-radius: 5px;";
  content += "  font-family: Arial;";
  content += "  color: #ffffff;";
  content += "  font-size: 24px;";
  content += "  background: #3498db;";
  content += "  padding: 10px 20px 10px 20px;";
  content += "  text-decoration: none;";
  content += "}";
  content += ".pm_text {";
  content += "width: 160px;";
  content += "-webkit-border-radius: 5;";
  content += "-moz-border-radius: 5;";
  content += "border-radius: 5px;";
  content += "font-family: Arial;";
  content += "font-size: 24px;";

  content += "padding: 10px 20px 10px 20px;";
  content += "text-decoration: none;";
  content += "}";

  content += ".pm_btn:hover {";
  content += "  background: #3cb0fd;";
  content += "  background-image: -webkit-linear-gradient(top, #3cb0fd, #3498db);";
  content += "  background-image: -moz-linear-gradient(top, #3cb0fd, #3498db);";
  content += "  background-image: -ms-linear-gradient(top, #3cb0fd, #3498db);";
  content += "  background-image: -o-linear-gradient(top, #3cb0fd, #3498db);";
  content += "  background-image: linear-gradient(to bottom, #3cb0fd, #3498db);";
  content += "  text-decoration: none;";
  content += "}";

  content += ".pms_btn {";
  content += "width: 240px;";
  content += "-webkit-border-radius: 5;";
  content += "-moz-border-radius: 5;";
  content += "border-radius: 5px;";
  content += "font-family: Arial;";
  content += "color: #ffffff;";
  content += "font-size: 24px;";
  content += "background: #3498db;";
  content += "padding: 10px 20px 10px 20px;";
  content += "text-decoration: none;";
  content += "}";

  content += ".pms_btn:hover {";
  content += "background: #3cb0fd;";
  content += "background-image: -webkit-linear-gradient(top, #3cb0fd, #3498db);";
  content += "background-image: -moz-linear-gradient(top, #3cb0fd, #3498db);";
  content += "background-image: -ms-linear-gradient(top, #3cb0fd, #3498db);";
  content += "background-image: -o-linear-gradient(top, #3cb0fd, #3498db);";
  content += "background-image: linear-gradient(to bottom, #3cb0fd, #3498db);";
  content += "text-decoration: none;";
  content += "}";
  content += "  </style>";
  content += "</head>";
  content += "<body>";

  content += "<table>";
  content += "<tr>";
  content += "<td></td>";
  content += "<td>GPIO 12  ,  Default value = 90<br/><input class=\"pm_text\" type=\"text\" id=\"gpid_12\" value=\"90\"><button class=\"pm_btn\" style=\"background: #6e6e6e;\" type=\"button\" onclick=\"controlGpid(12, 'gpid_12')\">SEND</button></td>";
  content += "</tr>";
  content += "</table>";

  content += "<br>";

  content += "<table>";
  content += "<tr>";
  content += "<td>Servo 8  ,  Default value = 135<br/><input class=\"pm_text\" type=\"text\" id=\"servo_8\" value=\"135\"><button class=\"pm_btn\" style=\"background: #f5da81;\" type=\"button\" onclick=\"controlServo(8,'servo_8')\">SEND</button></td>";
  content += "<td>Servo 7  ,  Default value = 135<br/><input class=\"pm_text\" type=\"text\" id=\"servo_7\" value=\"135\"><button class=\"pm_btn\" style=\"background: #f5da81;\" type=\"button\" onclick=\"controlServo(7, 'servo_7')\">SEND</button></td>";
  content += "</tr>";

  content += "<tr>";
  content += "<td>Servo 9  ,  Default value = 135<br/><input class=\"pm_text\" type=\"text\" id=\"servo_9\" value=\"135\"><button class=\"pm_btn\" style=\"background: #bdbdbd;\" type=\"button\" onclick=\"controlServo(9,'servo_9')\">SEND</button></td>";
  content += "<td>Servo 6  ,  Default value = 135<br/><input class=\"pm_text\" type=\"text\" id=\"servo_6\" value=\"135\"><button class=\"pm_btn\" style=\"background: #bdbdbd;\" type=\"button\" onclick=\"controlServo(6,'servo_6')\">SEND</button></td>";
  content += "</tr>";

  content += "<tr>";
  content += "<td>Servo 10  ,  Default value = 135<br/><input class=\"pm_text\" type=\"text\" id=\"servo_10\" value=\"135\"><button class=\"pm_btn\" type=\"button\" onclick=\"controlServo(10,'servo_10')\">SEND</button></td>";
  content += "<td>Servo 5  ,  Default value = 135<br/><input class=\"pm_text\" type=\"text\" id=\"servo_5\" value=\"135\"><button class=\"pm_btn\" type=\"button\" onclick=\"controlServo(5,'servo_5')\">SEND</button></td>";
  content += "</tr>";
  content += "</table>";

  content += "<br>";

  content += "<table>";
  content += "<tr>";
  content += "<td>Servo 11  ,  Default value = 135<br/><input class=\"pm_text\" type=\"text\" id=\"servo_11\" value=\"135\"><button class=\"pm_btn\" type=\"button\" onclick=\"controlServo(11,'servo_11')\">SEND</button></td>";
  content += "<td>Servo 4  ,  Default value = 135<br/><input class=\"pm_text\" type=\"text\" id=\"servo_4\" value=\"135\"><button class=\"pm_btn\" type=\"button\" onclick=\"controlServo(4,'servo_4')\">SEND</button></td>";
  content += "</tr>";

  content += "<tr>";
  content += "<td>Servo 12  ,  Default value = 135<br/><input class=\"pm_text\" type=\"text\" id=\"servo_12\" value=\"135\"><button class=\"pm_btn\" style=\"background: #bdbdbd;\" type=\"button\" onclick=\"controlServo(12,'servo_12')\">SEND</button></td>";
  content += "<td>Servo 3  ,  Default value = 135<br/><input class=\"pm_text\" type=\"text\" id=\"servo_3\" value=\"135\"><button class=\"pm_btn\" style=\"background: #bdbdbd;\" type=\"button\" onclick=\"controlServo(3,'servo_3')\">SEND</button></td>";
  content += "</tr>";

  content += "<tr>";
  content += "<td>Servo 13  ,  Default value = 135<br/><input class=\"pm_text\" type=\"text\" id=\"servo_13\" value=\"135\"><button class=\"pm_btn\" style=\"background: #f5da81;\" type=\"button\" onclick=\"controlServo(13,'servo_13')\">SEND</button></td>";
  content += "<td>Servo 2  ,  Default value = 135<br/><input class=\"pm_text\" type=\"text\" id=\"servo_2\" value=\"135\"><button class=\"pm_btn\" style=\"background: #f5da81;\" type=\"button\" onclick=\"controlServo(2,'servo_2')\">SEND</button></td>";
  content += "</tr>";

  content += "<tr>";
  content += "<td>Servo 14  ,  Default value = 135<br/><input class=\"pm_text\" type=\"text\"  id=\"servo_14\" value=\"135\"><button class=\"pm_btn\" style=\"background: #bdbdbd;\" type=\"button\" onclick=\"controlServo(14,'servo_14')\">SEND</button></td>";
  content += "<td>Servo 1  ,  Default value = 135<br/><input class=\"pm_text\" type=\"text\" id=\"servo_1\" value=\"135\"><button class=\"pm_btn\" style=\"background: #bdbdbd;\" type=\"button\" onclick=\"controlServo(1,'servo_1')\">SEND</button></td>";
  content += "</tr>";

  content += "<tr>";
  content += "<td>Servo 15  ,  Default value = 135<br/><input class=\"pm_text\" type=\"text\"  id=\"servo_15\" value=\"135\"><button class=\"pm_btn\" type=\"button\" onclick=\"controlServo(15,'servo_15')\">SEND</button></td>";
  content += "<td>Servo 0  ,  Default value = 135<br/><input class=\"pm_text\" type=\"text\" id=\"servo_0\" value=\"135\"><button class=\"pm_btn\" type=\"button\" onclick=\"controlServo(0,'servo_0')\">SEND</button></td>";
  content += "</tr>";
  content += "</table>";

  content += "<br>";

  content += "<table>";
  content += "<tr>";
  content += "<td><button class=\"pm_btn\" style=\"background: #ed3db5;\" type=\"button\" onclick=\"controlPm(99)\">STANDBY POSE</button></td>";
  content += "</tr>";
  content += "</table>";

  content += "<br>";

  content += "</body>";
  content += "<script>";

  content += "function controlServo(id, textId) {";
  content += "  var xhttp = new XMLHttpRequest();";
  content += "  var value = document.getElementById(textId).value;";
  content += "  xhttp.onreadystatechange = function() {";
  content += "    if (xhttp.readyState == 4 && xhttp.status == 200) {";
  content += "     document.getElementById(\"demo\").innerHTML = xhttp.responseText;";
  content += "    }";
  content += "  };";
  content += "  xhttp.open(\"GET\",\"controller?servo=\"+id+\"&value=\"+value, true);";
  content += "  xhttp.send();";
  content += "}";
  content += "function controlGpid(id, textId) {";
  content += "  var xhttp = new XMLHttpRequest();";
  content += "  var value = document.getElementById(textId).value;";
  content += "  xhttp.onreadystatechange = function() {";
  content += "    if (xhttp.readyState == 4 && xhttp.status == 200) {";
  content += "     document.getElementById(\"demo\").innerHTML = xhttp.responseText;";
  content += "    }";
  content += "  };";
  content += "  xhttp.open(\"GET\", \"controller?gpid=\"+id+\"&value=\"+value, true);";
  content += "  xhttp.send();";
  content += "}";

  content += "function controlPm(value) {";
  content += "  var xhttp = new XMLHttpRequest();";
  content += "  xhttp.onreadystatechange = function() {";
  content += "    if (xhttp.readyState == 4 && xhttp.status == 200) {";
  content += "     document.getElementById(\"demo\").innerHTML = xhttp.responseText;";
  content += "    }";
  content += "  };";
  content += "  xhttp.open(\"GET\", \"controller?pm=\"+value, true);";
  content += "  xhttp.send();";
  content += "}";

  content += "</script>";
  content += "</html>";
  server.send(200, "text/html", content);
}


/*============================================================================
  馬達校正畫面
  ============================================================================*/
void handleSetting()
{
  int servo19Val = readKeyValue(19);
  String servo19ValStr = String(servo19Val);

  int servo18Val = readKeyValue(18);
  String servo18ValStr = String(servo18Val);

  int servo17Val = readKeyValue(17);
  String servo17ValStr = String(servo17Val);

  int servo16Val = readKeyValue(16);
  String servo16ValStr = String(servo16Val);

  int servo15Val = readKeyValue(15);
  String servo15ValStr = String(servo15Val);

  int servo14Val = readKeyValue(14);
  String servo14ValStr = String(servo14Val);

  int servo13Val = readKeyValue(13);
  String servo13ValStr = String(servo13Val);

  int servo12Val = readKeyValue(12);
  String servo12ValStr = String(servo12Val);

  int servo11Val = readKeyValue(11);
  String servo11ValStr = String(servo11Val);

  int servo10Val = readKeyValue(10);
  String servo10ValStr = String(servo10Val);

  int servo9Val = readKeyValue(9);
  String servo9ValStr = String(servo9Val);

  int servo8Val = readKeyValue(8);
  String servo8ValStr = String(servo8Val);

  int servo7Val = readKeyValue(7);
  String servo7ValStr = String(servo7Val);

  int servo6Val = readKeyValue(6);
  String servo6ValStr = String(servo6Val);

  int servo5Val = readKeyValue(5);
  String servo5ValStr = String(servo5Val);

  int servo4Val = readKeyValue(4);
  String servo4ValStr = String(servo4Val);

  int servo3Val = readKeyValue(3);
  String servo3ValStr = String(servo3Val);

  int servo2Val = readKeyValue(2);
  String servo2ValStr = String(servo2Val);

  int servo1Val = readKeyValue(1);
  String servo1ValStr = String(servo1Val);

  int servo0Val = readKeyValue(0);
  String servo0ValStr = String(servo0Val);

  String content = "";
  content += "<html>";
  content += "<head>";
  content += "  <title>RoboHero Setting</title>";
  content += "  <style type=\"text/css\">";
  content += "  body {";
  content += "    color: white;";
  content += "    background-color: #000000 }";

  content += "  .pm_btn {";
  content += "  width: 120px;";
  content += "  -webkit-border-radius: 5;";
  content += "  -moz-border-radius: 5;";
  content += "  border-radius: 5px;";
  content += "  font-family: Arial;";
  content += "  color: #ffffff;";
  content += "  font-size: 24px;";
  content += "  background: #3498db;";
  content += "  padding: 10px 20px 10px 20px;";
  content += "  text-decoration: none;";
  content += "}";
  content += ".pm_text {";
  content += "width: 80px;";
  content += "-webkit-border-radius: 5;";
  content += "-moz-border-radius: 5;";
  content += "border-radius: 5px;";
  content += "font-family: Arial;";
  content += "font-size: 24px;";

  content += "padding: 10px 20px 10px 20px;";
  content += "text-decoration: none;";
  content += "}";

  content += ".pm_btn:hover {";
  content += "  background: #3cb0fd;";
  content += "  background-image: -webkit-linear-gradient(top, #3cb0fd, #3498db);";
  content += "  background-image: -moz-linear-gradient(top, #3cb0fd, #3498db);";
  content += "  background-image: -ms-linear-gradient(top, #3cb0fd, #3498db);";
  content += "  background-image: -o-linear-gradient(top, #3cb0fd, #3498db);";
  content += "  background-image: linear-gradient(to bottom, #3cb0fd, #3498db);";
  content += "  text-decoration: none;";
  content += "}";

  content += ".pms_btn {";
  content += "width: 160px;";
  content += "-webkit-border-radius: 5;";
  content += "-moz-border-radius: 5;";
  content += "border-radius: 5px;";
  content += "font-family: Arial;";
  content += "color: #ffffff;";
  content += "font-size: 24px;";
  content += "background: #3498db;";
  content += "padding: 10px 20px 10px 20px;";
  content += "text-decoration: none;";
  content += "}";

  content += ".pms_btn:hover {";
  content += "background: #3cb0fd;";
  content += "background-image: -webkit-linear-gradient(top, #3cb0fd, #3498db);";
  content += "background-image: -moz-linear-gradient(top, #3cb0fd, #3498db);";
  content += "background-image: -ms-linear-gradient(top, #3cb0fd, #3498db);";
  content += "background-image: -o-linear-gradient(top, #3cb0fd, #3498db);";
  content += "background-image: linear-gradient(to bottom, #3cb0fd, #3498db);";
  content += "text-decoration: none;";
  content += "}";
  content += "  </style>";
  content += "</head>";
  content += "<body>";

  content += "<table>";
  content += "<tr>";
  content += "<td></td>";
  content += "<td>GPIO 12<br/><input class=\"pm_text\" type=\"text\" id=\"servo_16\" value=\"" + servo16ValStr + "\"><button class=\"pm_btn\" type=\"button\" onclick=\"saveServo(16,'servo_16')\">SET</button></td>";
  content += "</tr>";

  content += "<tr>";
  content += "<td>Servo 8<br/><input class=\"pm_text\" type=\"text\" id=\"servo_8\" value=\"" + servo8ValStr + "\"><button class=\"pm_btn\" type=\"button\" onclick=\"saveServo(8,'servo_8')\">SET</button></td>";
  content += "<td>Servo 7<br/><input class=\"pm_text\" type=\"text\" id=\"servo_7\" value=\"" + servo7ValStr + "\"><button class=\"pm_btn\" type=\"button\" onclick=\"saveServo(7,'servo_7')\">SET</button></td>";
  content += "</tr>";

  content += "<tr>";
  content += "<td>Servo 9<br/><input class=\"pm_text\" type=\"text\" id=\"servo_9\" value=\"" + servo9ValStr + "\"><button class=\"pm_btn\" type=\"button\" onclick=\"saveServo(9,'servo_9')\">SET</button></td>";
  content += "<td>Servo 6<br/><input class=\"pm_text\" type=\"text\" id=\"servo_6\" value=\"" + servo6ValStr + "\"><button class=\"pm_btn\" type=\"button\" onclick=\"saveServo(6,'servo_6')\">SET</button></td>";
  content += "</tr>";

  content += "<tr>";
  content += "<td>Servo 10<br/><input class=\"pm_text\" type=\"text\" id=\"servo_10\" value=\"" + servo10ValStr + "\"><button class=\"pm_btn\" type=\"button\" onclick=\"saveServo(10,'servo_10')\">SET</button></td>";
  content += "<td>Servo 5<br/><input class=\"pm_text\" type=\"text\" id=\"servo_5\" value=\"" + servo5ValStr + "\"><button class=\"pm_btn\" type=\"button\" onclick=\"saveServo(5,'servo_5')\">SET</button></td>";
  content += "</tr>";

  content += "<tr>";
  content += "<td>Servo 11<br/><input class=\"pm_text\" type=\"text\" id=\"servo_11\" value=\"" + servo11ValStr + "\"><button class=\"pm_btn\" type=\"button\" onclick=\"saveServo(11,'servo_11')\">SET</button></td>";
  content += "<td>Servo 4<br/><input class=\"pm_text\" type=\"text\" id=\"servo_4\" value=\"" + servo4ValStr + "\"><button class=\"pm_btn\" type=\"button\" onclick=\"saveServo(4,'servo_4')\">SET</button></td>";
  content += "</tr>";

  content += "<tr>";
  content += "<td>Servo 12<br/><input class=\"pm_text\" type=\"text\" id=\"servo_12\" value=\"" + servo12ValStr + "\"><button class=\"pm_btn\" type=\"button\" onclick=\"saveServo(12,'servo_12')\">SET</button></td>";
  content += "<td>Servo 3<br/><input class=\"pm_text\" type=\"text\" id=\"servo_3\" value=\"" + servo3ValStr + "\"><button class=\"pm_btn\" type=\"button\" onclick=\"saveServo(3,'servo_3')\">SET</button></td>";
  content += "</tr>";

  content += "<tr>";
  content += "<td>Servo 13<br/><input class=\"pm_text\" type=\"text\" id=\"servo_13\" value=\"" + servo13ValStr + "\"><button class=\"pm_btn\" type=\"button\" onclick=\"saveServo(13,'servo_13')\">SET</button></td>";
  content += "<td>Servo 2<br/><input class=\"pm_text\" type=\"text\" id=\"servo_2\" value=\"" + servo2ValStr + "\"><button class=\"pm_btn\" type=\"button\" onclick=\"saveServo(2,'servo_2')\">SET</button></td>";
  content += "</tr>";

  content += "<tr>";
  content += "<td>Servo 14<br/><input class=\"pm_text\" type=\"text\" id=\"servo_14\" value=\"" + servo14ValStr + "\"><button class=\"pm_btn\" type=\"button\" onclick=\"saveServo(14,'servo_14')\">SET</button></td>";
  content += "<td>Servo 1<br/><input class=\"pm_text\" type=\"text\" id=\"servo_1\" value=\"" + servo1ValStr + "\"><button class=\"pm_btn\" type=\"button\" onclick=\"saveServo(1,'servo_1')\">SET</button></td>";
  content += "</tr>";

  content += "<tr>";
  content += "<td>Servo 15<br/><input class=\"pm_text\" type=\"text\" id=\"servo_15\" value=\"" + servo15ValStr + "\"><button class=\"pm_btn\" type=\"button\" onclick=\"saveServo(15,'servo_15')\">SET</button></td>";
  content += "<td>Servo 0<br/><input class=\"pm_text\" type=\"text\" id=\"servo_0\" value=\"" + servo0ValStr + "\"><button class=\"pm_btn\" type=\"button\" onclick=\"saveServo(0,'servo_0')\">SET</button></td>";
  content += "</tr>";
  content += "</table>";

  content += "<br>";

  content += "<table>";
  content += "<tr>";
  content += "<td>PWM Frequency Calibration<br/><input class=\"pm_text\" type=\"text\" id=\"servo_18\" value=\"" + servo18ValStr + "\"><button class=\"pm_btn\" type=\"button\" onclick=\"saveServo(18,'servo_18')\">SET</button></td>";
  content += "<td>Voltage Calibration<br/><input class=\"pm_text\" type=\"text\" id=\"servo_19\" value=\"" + servo19ValStr + "\"><button class=\"pm_btn\" type=\"button\" onclick=\"saveServo(19,'servo_19')\">SET</button></td>";
  content += "</tr>";

  content += "<tr>";
  content += "<td>Delay Time<br/><input class=\"pm_text\" type=\"text\" id=\"servo_17\" value=\"" + servo17ValStr + "\"><button class=\"pm_btn\" type=\"button\" onclick=\"saveServo(17,'servo_17')\">SET</button></td>";
  content += "</tr>";
  content += "</table>";

  content += "<br>";
  content += "<br>";

  content += "<table>";
  content += "<tr>";
  content += "<td><button class=\"pm_btn\" style=\"background: #ed3db5;\" type=\"button\" onclick=\"saveServo(100, 0)\">RESET</button></td>";
  content += "</tr>";
  content += "</table>";

  content += "<br>";

  content += "</body>";
  content += "<script>";

  content += "function saveServo(id, textId) {";
  content += "  var xhttp = new XMLHttpRequest();";
  content += "  var value = \"0\";";
  content += "  if(id==100){";
  //content += "    document.getElementById(\"servo_19\").value = \"0\";";
  //content += "    document.getElementById(\"servo_18\").value = \"0\";";
  content += "    document.getElementById(\"servo_17\").value = \"0\";";
  content += "    document.getElementById(\"servo_16\").value = \"0\";";
  content += "    document.getElementById(\"servo_15\").value = \"0\";";
  content += "    document.getElementById(\"servo_14\").value = \"0\";";
  content += "    document.getElementById(\"servo_13\").value = \"0\";";
  content += "    document.getElementById(\"servo_12\").value = \"0\";";
  content += "    document.getElementById(\"servo_11\").value = \"0\";";
  content += "    document.getElementById(\"servo_10\").value = \"0\";";
  content += "    document.getElementById(\"servo_9\").value = \"0\";";
  content += "    document.getElementById(\"servo_8\").value = \"0\";";
  content += "    document.getElementById(\"servo_7\").value = \"0\";";
  content += "    document.getElementById(\"servo_6\").value = \"0\";";
  content += "    document.getElementById(\"servo_5\").value = \"0\";";
  content += "    document.getElementById(\"servo_4\").value = \"0\";";
  content += "    document.getElementById(\"servo_3\").value = \"0\";";
  content += "    document.getElementById(\"servo_2\").value = \"0\";";
  content += "    document.getElementById(\"servo_1\").value = \"0\";";
  content += "    document.getElementById(\"servo_0\").value = \"0\";";
  content += "  }else{";
  content += "    value = document.getElementById(textId).value;";
  content += "   }";
  content += "  xhttp.onreadystatechange = function() {";
  content += "    if (xhttp.readyState == 4 && xhttp.status == 200) {";
  content += "     console.log( xhttp.responseText ) ; " ;
  content += "    }";
  content += "  };";
  content += "  xhttp.open(\"GET\",\"save?key=\"+id+\"&value=\"+value, true);";
  content += "  xhttp.send();";
  content += "}";

  content += "</script>";
  content += "</html>";
  server.send(200, "text/html", content);
}

/*============================================================================
  主控畫面
  ============================================================================*/
void handleIndex()
{
  String content = "";
  content += "<html>";

  content += "<head>";
  content += "  <title>RoboHero Controller</title>";
  content += "  <style type=\"text/css\">";
  content += "  body {";
  content += "    color: white;";
  content += "    background-color: #000000 }";

  content += "  .pm_btn {";
  content += "  width: 160px;";
  content += "  -webkit-border-radius: 5;";
  content += "  -moz-border-radius: 5;";
  content += "  border-radius: 5px;";
  content += "  font-family: Arial;";
  content += "  color: #ffffff;";
  content += " font-size: 24px;";
  content += "background: #3498db;";
  content += "  padding: 10px 20px 10px 20px;";
  content += "  text-decoration: none;";
  content += "}";

  content += ".pm_btn:hover {";
  content += "  background: #3cb0fd;";
  content += "  background-image: -webkit-linear-gradient(top, #3cb0fd, #3498db);";
  content += "  background-image: -moz-linear-gradient(top, #3cb0fd, #3498db);";
  content += "  background-image: -ms-linear-gradient(top, #3cb0fd, #3498db);";
  content += "  background-image: -o-linear-gradient(top, #3cb0fd, #3498db);";
  content += "  background-image: linear-gradient(to bottom, #3cb0fd, #3498db);";
  content += "  text-decoration: none;";
  content += "}";

  content += ".pms_btn {";
  content += "width: 240px;";
  content += "-webkit-border-radius: 5;";
  content += "-moz-border-radius: 5;";
  content += "border-radius: 5px;";
  content += "font-family: Arial;";
  content += "color: #ffffff;";
  content += "font-size: 24px;";
  content += "background: #3498db;";
  content += "padding: 10px 20px 10px 20px;";
  content += "text-decoration: none;";
  content += "}";

  content += ".pms_btn:hover {";
  content += "background: #3cb0fd;";
  content += "background-image: -webkit-linear-gradient(top, #3cb0fd, #3498db);";
  content += "background-image: -moz-linear-gradient(top, #3cb0fd, #3498db);";
  content += "background-image: -ms-linear-gradient(top, #3cb0fd, #3498db);";
  content += "background-image: -o-linear-gradient(top, #3cb0fd, #3498db);";
  content += "background-image: linear-gradient(to bottom, #3cb0fd, #3498db);";
  content += "text-decoration: none;";
  content += "}";
  content += " </style>";
  content += "</head>";


  content += "<body>";
  content += "<table>";
  content += "<tr>";
  content += "<td><button  class=\"pm_btn\" type=\"button\" onclick=\"controlPm(3)\">TurnLeft</button></td>";
  content += "<td><button  class=\"pm_btn\" type=\"button\" onclick=\"controlPm(1)\">Forward</button></td>";
  content += "<td><button  class=\"pm_btn\" type=\"button\" onclick=\"controlPm(4)\">TurnRight</button></td>";
  content += "</tr>";

  content += "<tr>";
  content += "<td><button  class=\"pm_btn\" type=\"button\" onclick=\"controlPm(5)\">MoveLeft</button></td>";
  content += "<td><button  class=\"pm_btn\" style=\"background: #ed3db5;\" type=\"button\" onclick=\"controlPm(99)\">STANDBY</button></td>";
  content += "<td><button  class=\"pm_btn\" type=\"button\" onclick=\"controlPm(6)\">MoveRight</button></td>";
  content += "</tr>";

  content += "<tr>";
  content += "<td></td>";
  content += "<td><button  class=\"pm_btn\" type=\"button\" onclick=\"controlPm(2)\">Backward</button></td>";
  content += "<td></td>";
  content += "</tr>";
  content += "</table>";

  content += "<table>";
  content += "<tr>";
  content += "<td><button class=\"pms_btn\" type=\"button\" onclick=\"controlPm(11)\">Get Up</button></td>";
  content += "<td><button class=\"pms_btn\" type=\"button\" onclick=\"controlPm(12)\">FaceDownGetUp</button></td>";
  content += "</tr>";
  content += "</table>";

  content += "<table>";
  content += "<tr>";
  content += "<td><button class=\"pms_btn\" style=\"background: #ffbf00;\" type=\"button\" onclick=\"controlPms(1)\">Bow</button></td>";
  content += "<td><button  class=\"pms_btn\" style=\"background: #ffbf00;\" type=\"button\" onclick=\"controlPms(4)\">Apache</button></td>";
  content += "</tr>";

  content += "<tr>";
  content += "<td><button class=\"pms_btn\" style=\"background: #ffbf00;\" type=\"button\" onclick=\"controlPms(2)\">Waving</button></td>";
  content += "<td><button  class=\"pms_btn\" style=\"background: #ffbf00;\" type=\"button\" onclick=\"controlPms(5)\">Balance</button></td>";
  content += "</tr>";

  content += "<tr>";
  content += "<td><button class=\"pms_btn\" style=\"background: #ffbf00;\" type=\"button\" onclick=\"controlPms(3)\">Iron Man</button></td>";
  content += "<td><button  class=\"pms_btn\" style=\"background: #ffbf00;\" type=\"button\" onclick=\"controlPms(6)\">Warm-Up</button></td>";
  content += "</tr>";

  content += "<tr>";
  content += "<td><button class=\"pms_btn\" style=\"background: #ffbf00;\" type=\"button\" onclick=\"controlPms(7)\">Clap Hands</button></td>";
  content += "<td><button  class=\"pms_btn\" style=\"background: #ffbf00;\" type=\"button\" onclick=\"controlPms(8)\">GOILC</button></td>";
  content += "</tr>";

  content += "<tr>";
  content += "<td><button class=\"pms_btn\" style=\"background: #ffbf00;\" type=\"button\" onclick=\"controlPms(9)\">Dance</button></td>";
  content += "<td></td>";
  content += "</tr>";

  content += "<tr>";
  content += "<td colspan=\"2\"><center><button  class=\"pms_btn\" style=\"background: #04b404;\" type=\"button\" onclick=\"controlPms(99)\">Auto</button></center></td>";
  content += "</tr>";
  content += "</table>";

  content += "<table>";
  content += "<tr>";
  content += "<td>\"" + FW_Version + "\"</td>";
  content += "</tr>";
  content += "</table>";

  content += "</body>";
  content += "<script>";
  content += "function controlPm(id) {";
  content += "var xhttp = new XMLHttpRequest();";
  content += "xhttp.onreadystatechange = function() {";
  content += "    if (xhttp.readyState == 4 && xhttp.status == 200) {";

  content += "    }";
  content += "  };";
  content += "  xhttp.open(\"GET\", \"controller?pm=\"+id, true);";
  content += "  xhttp.send();";
  content += "}";
  content += "function controlPms(id) {";
  content += "  var xhttp = new XMLHttpRequest();";
  content += "  xhttp.onreadystatechange = function() {";
  content += "    if (xhttp.readyState == 4 && xhttp.status == 200) {";

  content += " }";
  content += "  };";
  content += "  xhttp.open(\"GET\", \"controller?pms=\"+id, true);";
  content += "  xhttp.send();";
  content += "}";
  content += "</script>";
  content += "</html>";

  server.send(200, "text/html", content);
}


/*
 * get information about this robot
 */
void handleInfo()
{
  String response = "{" ;

  response += "\"ver\": 2.29, " ; // 
  response += "\"type\": \"robohero\" " ; // robohero, robospider, robowalker etc.
  response += "\"low\": " + String( Input_Voltage_Low ) + ", " ; // is low voltage
  response += "\"volt\": " + String(Voltage) + ", " ; // voltage response 
  response += "\"msg\": \"Robohero firmware\" " ; // 
  response += "}" ;
  server.send(200, "text/html", response ) ;
}



/*============================================================================*/
void handleTouch()
{
  String sLeft = server.arg("left");
  String sRight = server.arg("right");

  int8_t tleft = sLeft.toInt();
  int8_t tright = sRight.toInt();

  left = tleft ;
  right = tright ;
  
  Serial.print("Get Servo lr = ") ;
  Serial.print( tleft ) ;
  Serial.print( ",") ;
  Serial.println( tright ) ;

  ghost_program = 1 ;


  String sup = server.arg("up") ;
  int8_t tup = sup.toInt() ;
  if ( tup != 0 ) {
    upDegree = tup ;
  }

  String sdown = server.arg("down") ;
  int8_t tdown = sdown.toInt() ;
  if ( tdown != 0 ) {
    downDegree = tdown ;
  }
  
  String content =  "OK" ;
  server.send(200, "text/html", content) ;
}

void handleTouchDown() {
  ghost_program = 2 ;
  String content =  "OK" ;
  server.send(200, "text/html", content) ;
}

void handleTouchUp() {
  ghost_program = 3 ;
  String content =  "OK" ;
  server.send(200, "text/html", content) ;
}

void handleFan() {
   String temp = server.arg("ms");
   fanMS = temp.toInt() ;
   if ( fanMS == 0 ) {
      fanMS = 0 ;
   }
   digitalWrite(LedPin, HIGH); 

   String ok = "OK" ;
   server.send(200, "text/html", ok) ;
}

void handleTail() {
   String temp = server.arg("ms");
   tailMS = temp.toInt() ;
   if ( tailMS == 0 ) {
     tailMS = 500 ;
   }

   String ok = "OK" ; 
   server.send(200, "text/html", ok) ;
}

/*
 * reset Voltage Warning 
 */
void handleReset()
{
  Input_Voltage_Low = 0 ;
  server.send(200, "text/html", "{\"ret\": \"ok\" }" ) ;
}


/*
 * call esp8266 restart
 */
void handleRestart() {
  ESP.restart() ;
}

/*============================================================================*/
void enableWebServer()
{
  HTTPMethod getMethod = HTTP_GET;

  server.on("/controller", getMethod, handleController);
  server.on("/save", getMethod, handleSave);

  server.on("/", getMethod, handleIndex);
  server.on("/editor", getMethod, handleEditor);
  server.on("/zero", getMethod, handleZero);
  server.on("/setting", getMethod, handleSetting);
  server.on("/eeprom", getMethod, handleGetEEPROM);

  server.on("/online", getMethod, handleOnLine);

  server.on("/fan", getMethod, handleFan) ;
  server.on("/touch", getMethod, handleTouch) ;
  server.on("/tail", getMethod, handleTail) ;

  server.on("/touchDown", getMethod, handleTouchDown) ;
  server.on("/touchUp", getMethod, handleTouchUp) ;
  
  //server.on("/left", getMethod, handleLeft );
  //server.on("/right", getMethod, handleRight );
  
  // add by yougang kuo, ver
  server.on("/info", getMethod, handleInfo );
  
  server.on("/reset", getMethod, handleReset ); // reset the low volt mode 
  server.on("/restart", getMethod, handleRestart ); // reset the low volt mode 

  server.begin();
}



/*
 * setup wifi mode, you can change cinfig in Config.h 
 */
void setupWifi( ) {

  // AP SSID Name
  uint8_t mac[WL_MAC_ADDR_LENGTH];
  WiFi.softAPmacAddress(mac);
  String macID = String(mac[WL_MAC_ADDR_LENGTH - 2], HEX) +
                 String(mac[WL_MAC_ADDR_LENGTH - 1], HEX);
  macID.toUpperCase();
  String AP_NameString = "TTR-" + macID;

  char AP_NameChar[AP_NameString.length() + 1];
  memset(AP_NameChar, AP_NameString.length() + 1, 0);

  for (int i = 0; i < AP_NameString.length() + 1; i++)
    AP_NameChar[i] = AP_NameString.charAt(i);


  IPAddress myIP ;
  if (AP_MODE ) {
      Serial.println("Using AP Mode");
      WiFi.softAP(AP_NameChar, WiFiAPPSK);
      myIP = WiFi.softAPIP();  
  }
  else {
      Serial.println("Using Client Mode");
      
      WiFi.begin(CLIENT_SSID, CLIENT_PASSWORD);
  
       while (WiFi.status() != WL_CONNECTED) {
         delay(1000);
         Serial.print("Connecting ");
         Serial.print(CLIENT_SSID);
         Serial.println("...");
       }
       Serial.println("WiFi connected");
       myIP = WiFi.localIP() ;
       delay(500);
  }

  Serial.print("IP address: ");
  Serial.println(WiFi.localIP());

  if ( AP_MODE == 0 ) {
     if ( !MDNS.begin(MDNS_NAME, myIP)) {
      Serial.println("Error setting up MDNS responder!");
     }
    Serial.println("mDNS responder started");
    //MDNS.addService("http", "tcp", 80);
  }

}

/*
 * setup everything need for robohero
 */
void setup(void) {

  Serial.begin(9600);
  Serial.println("RoboHero Start");

  // EEPROM, must be declear first 
  EEPROM.begin(64);
  delay(20);
  
  // GPIO PIN
  pinMode(LedPin, OUTPUT);
  digitalWrite(LedPin, LOW);


  // Engineering Model
  pinMode(12, OUTPUT);
  digitalWrite(12, LOW);
  delay(100);
  pinMode(12, INPUT);
  delay(100);
  Engineering_Model = digitalRead(12);
  if (Engineering_Model == 1) {
    Servo_PROGRAM = 100;
  }

  // Software PWM PIN
  GPIO12SERVO.attach(12);


  // Initialize I2C
  Wire.begin(4, 5);

  // PWMServoDriver
  pwm.begin();
  Get_PWM_Frequency();
  pwm.setPWMFreq(Set_PWM_Freq);


  setupWifi() ;


  // Clear Input Voltage Low
  Input_Voltage_Low = 0;

  // Get_Voltage_Value
  Get_Voltage_Value();


  // 清除備份目前馬達數值
  for ( int Index = 0; Index < ALLMATRIX; Index++)
  {
    Running_Servo_POS[Index] = Servo_Act_1[Index] + (int8_t)EEPROM.read(Index);
  }

  // 網頁形成
  enableWebServer();
}




/*
 * 
 *
 */
/*============================================================================*/
void loop(void) {

  server.handleClient();
  

  if ( ghost_program == 1 ) {
      Serial.println("Run Ghost program 1") ;
      ghost_program = 0 ;
      
      while ( true ) {
         Serial.println("Run While @@ ") ;
        if ( left > 0 ) {
          left = left - 1 ;
          Serial.println("Hit Left") ;
          Set_PWM_to_Servo(LEFT_PIN, upDegree );
        }
        if ( right > 0 ) {
          right = right - 1 ;
          Set_PWM_to_Servo(RIGHT_PIN, upDegree );
          Serial.println("Hit Right") ;
        }
        delay(250) ;
        // left right to off 
        Set_PWM_to_Servo( LEFT_PIN, downDegree);
        Set_PWM_to_Servo(RIGHT_PIN, downDegree);
        Serial.println("Left Right Off") ;
        delay(100) ;

        server.handleClient(); // avoid server lock ;
        if ( left == 0 && right == 0 ) {
          break ;
        }
        if ( ghost_program != 0 ) {
          // new command coming
          break ;
        }
      }
  }

  if ( ghost_program == 2 ) {
      // force touch down ;
      ghost_program = 0 ;
      Set_PWM_to_Servo(RIGHT_PIN, upDegree );
  }
  if ( ghost_program == 3 ) {
    Set_PWM_to_Servo(RIGHT_PIN, downDegree);
    ghost_program = 0 ;
  }
  

  if ( fanMS > 0 ) {
    fanMS = fanMS - 10 ;
    tailMS = tailMS - 10 ;
    delay( 10 ) ;
    digitalWrite(LedPin, HIGH); 
  }
  else {
    fanMS = 0 ;
    digitalWrite(LedPin, LOW); 
  }
  

  if ( tailMS > 0 ) {
    fanMS = fanMS - 200 ;
    tailMS = tailMS - 200 ;

    if ( tailDir == 0 ) {
      Set_PWM_to_Servo(TAIL_PIN, 200);
      tailDir = 1 ;
    }
    else {
      Set_PWM_to_Servo(TAIL_PIN, 120);
      tailDir = 0 ;
    }
    delay( 200 ) ;
  }
  else {
    Set_PWM_to_Servo(TAIL_PIN, 120);
  }


  /*
  if (Servo_PROGRAM >= 1 && Input_Voltage_Low == 0 )
  {
    digitalWrite(LedPin, HIGH);

    Serial.print("Servo_PROGRAM = ");
    Serial.println(Servo_PROGRAM);

    switch (Servo_PROGRAM)
    {
      case 1:  // 前進
        Servo_PROGRAM_Run(Servo_Prg_10, Servo_Prg_10_Step);
        Servo_PROGRAM_Center();
        break;
      case 2:  // 後退
        Servo_PROGRAM_Run(Servo_Prg_11, Servo_Prg_11_Step);
        Servo_PROGRAM_Center();
        break;
      case 3:  // 左轉
        Servo_PROGRAM_Run(Servo_Prg_12, Servo_Prg_12_Step);
        Servo_PROGRAM_Center();
        break;
      case 4:  // 右轉
        Servo_PROGRAM_Run(Servo_Prg_13, Servo_Prg_13_Step);
        Servo_PROGRAM_Center();
        break;
      case 5:  // 左橫移動作
        Servo_PROGRAM_Run(Servo_Prg_14, Servo_Prg_14_Step);
        Servo_PROGRAM_Center();
        break;
      case 6:  // 右橫移動作
        Servo_PROGRAM_Run(Servo_Prg_15, Servo_Prg_15_Step);
        Servo_PROGRAM_Center();
        break;
      case 11:  // 仰躺起立
        Servo_PROGRAM_Run(Servo_Prg_20, Servo_Prg_20_Step);
        Servo_PROGRAM_Center();
        break;
      case 12:  // 仆街起立
        Servo_PROGRAM_Run(Servo_Prg_21, Servo_Prg_21_Step);
        Servo_PROGRAM_Center();
        break;
      case 99:  // 待機
        Servo_PROGRAM_Center();
        delay(300);
        break;
      case 100: // 歸零
        Servo_PROGRAM_Zero();
        delay(300);
        break;
    }
    Servo_PROGRAM = 0;
  }
  */
} 




int RunningBuffer[ALLMATRIX] ; // the current running buffer 
int RunningISteps = 0 ; // ticker pose running at step
bool isRunning = false ; // is ticker is running a pose

/*
 * new ver of Run Servo by ticker, with out delay inside, 
 */
void RunPoseAtStep(int iMatrix[ALLMATRIX],  int iSteps)
{
  
  int MainLoopIndex = iSteps ;
  int servoFrom, servoTo, servoMid;

  int InterTotalTime = iMatrix[ ALLMATRIX - 1 ] + (int8_t)EEPROM.read(ALLMATRIX - 1);
  int InterDelayCounter = InterTotalTime / BASEDELAYTIME;
  
  for (int ServoIndex = 0; ServoIndex < ALLSERVOS; ServoIndex++) 
  {

    servoFrom = Running_Servo_POS[ServoIndex];                 
    servoTo = iMatrix[ServoIndex] + (int8_t)EEPROM.read(ServoIndex);  

    if (servoFrom == servoTo)
    {
      servoFrom = servoTo;
    }

    else if (servoFrom > servoTo) 
    {
      servoMid =  map(BASEDELAYTIME * iSteps, 0, InterTotalTime, 0, servoFrom - servoTo);

      if (servoFrom - servoMid >= servoTo)
      {
        Set_PWM_to_Servo(ServoIndex, servoFrom - servoMid);
      }
    }

    else if (servoFrom < servoTo)  
    {
      servoMid =  map(BASEDELAYTIME * iSteps, 0, InterTotalTime, 0, servoTo - servoFrom);

      if (servoFrom + servoMid <= servoTo)
      {
        Set_PWM_to_Servo(ServoIndex, servoFrom + servoMid);
      }
    }

  }
}



/* ==========================================================================================
 *  all about frame buffer quque
 *  buffer is a ring buffer.
 ============================================================================================== */
/*
 * push frame into buffer 
 */
 void push( int frame[] ) {
  noInterrupts();
    if (( tail + 1 % FRAME_BUFFER_MAX) != head ) {

      for ( int i = 0 ; i < ALLMATRIX ; i++) {
        FrameBuffer[tail][i] = frame[i] ;
      }
      tail = (tail + 1) % FRAME_BUFFER_MAX ;

      //Serial.print("Push Queue len=") ;
      //Serial.println( getBufferLength() ) ;
    }
    else {
      Serial.println("FrameBuffer Overflow ") ;
    }
   interrupts(); 
 }

/*
 * pop frame out of buffer
 */
 void pop( int frame[]) {
  noInterrupts() ;
    if ( head != tail ) {

      for ( int i = 0 ; i < ALLMATRIX ; i++) {
        frame[i] = FrameBuffer[head][i] ;
      }
      
      head = (head + 1) % FRAME_BUFFER_MAX;
    }
    else {
      Serial.println("FrameBuffer No Data") ;
    }
    interrupts() ;
 }

/*
 * get buffer length
 */
 int getBufferLength() {
  int ret = 0 ;
  noInterrupts() ;
  if ( head == tail ) {
    ret = 0 ;
  }
  else {
    if ( tail > head ) {
      ret = tail - head ;
    }
    else {
      ret = ( tail + FRAME_BUFFER_MAX - head ) % FRAME_BUFFER_MAX;
    }
  }
  /*

  */

  if ( ret < -1 ) {
    Serial.print("Ring Buffer Error, Tail:" ) ;
    Serial.print( tail) ;
    Serial.print(" Head:" ) ;
    Serial.print( head ) ;
    Serial.print(" ret:" ) ;
    Serial.println( ret ) ;
  }
  interrupts() ;
  return ret ;
 }
